{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\chatsphere\\\\src\\\\components\\\\ContactList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { GlobalContext } from '../context/GlobalContext';\nimport useIndexedDB from '../hooks/useIndexedDB';\nimport '../styles/contactList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactList = () => {\n  _s();\n  const {\n    contacts,\n    theme,\n    dispatch\n  } = useContext(GlobalContext);\n  const {\n    getFromDB,\n    addToDB,\n    deleteFromDB\n  } = useIndexedDB();\n  const [newContactName, setNewContactName] = useState('');\n  const [newContactPic, setNewContactPic] = useState('');\n  const [selectedContact, setSelectedContact] = useState(null);\n  const [showForm, setShowForm] = useState(false); // Toggle for add contact form\n\n  useEffect(() => {\n    const fetchContacts = async () => {\n      try {\n        const storedContacts = await getFromDB('contacts');\n        if (storedContacts.length) {\n          dispatch({\n            type: 'SET_CONTACTS',\n            payload: storedContacts\n          });\n        } else {\n          const contactData = [{\n            id: 1,\n            name: 'Alice',\n            pic: ''\n          }, {\n            id: 2,\n            name: 'Bob',\n            pic: ''\n          }];\n          contactData.forEach(contact => addToDB('contacts', contact));\n          dispatch({\n            type: 'SET_CONTACTS',\n            payload: contactData\n          });\n        }\n      } catch (error) {\n        console.error('Error fetching contacts:', error);\n      }\n    };\n    fetchContacts();\n  }, [dispatch, getFromDB, addToDB]);\n\n  // Add a new contact\n  const handleAddContact = async () => {\n    if (newContactName.trim()) {\n      const newContact = {\n        id: Date.now(),\n        name: newContactName,\n        pic: newContactPic || '' // Optional profile picture\n      };\n      await addToDB('contacts', newContact);\n      dispatch({\n        type: 'ADD_CONTACT',\n        payload: newContact\n      });\n      setNewContactName('');\n      setNewContactPic('');\n      setShowForm(false); // Close the form\n    }\n  };\n\n  // Delete a contact\n  const handleDeleteContact = async id => {\n    await deleteFromDB('contacts', id);\n    dispatch({\n      type: 'DELETE_CONTACT',\n      payload: id\n    });\n  };\n\n  // Toggle theme\n  const toggleTheme = () => {\n    const newTheme = theme === 'light' ? 'dark' : 'light';\n    dispatch({\n      type: 'SET_THEME',\n      payload: newTheme\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `contact-list ${theme}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-list-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Contacts\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"add-contact-icon\",\n          onClick: () => setShowForm(!showForm),\n          children: \"\\u2795\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"theme-toggle\",\n        onClick: toggleTheme,\n        children: \"\\uD83C\\uDF17\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-contact-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter contact name\",\n        value: newContactName,\n        onChange: e => setNewContactName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter profile picture URL (optional)\",\n        value: newContactPic,\n        onChange: e => setNewContactPic(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddContact,\n        children: \"Add Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this), contacts.map(contact => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `contact-item ${selectedContact === contact.id ? 'selected' : ''}`,\n      onClick: () => setSelectedContact(contact.id),\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: contact.pic || 'https://via.placeholder.com/50' // Default profile pic\n        ,\n        alt: contact.name,\n        className: \"contact-pic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact-info\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"contact-name\",\n          children: contact.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteContact(contact.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this)]\n    }, contact.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n_s(ContactList, \"wDx/+E4GiJAmxa+xPM+f3UqhRDI=\", false, function () {\n  return [useIndexedDB];\n});\n_c = ContactList;\nexport default ContactList;\nvar _c;\n$RefreshReg$(_c, \"ContactList\");","map":{"version":3,"names":["React","useContext","useEffect","useState","GlobalContext","useIndexedDB","jsxDEV","_jsxDEV","ContactList","_s","contacts","theme","dispatch","getFromDB","addToDB","deleteFromDB","newContactName","setNewContactName","newContactPic","setNewContactPic","selectedContact","setSelectedContact","showForm","setShowForm","fetchContacts","storedContacts","length","type","payload","contactData","id","name","pic","forEach","contact","error","console","handleAddContact","trim","newContact","Date","now","handleDeleteContact","toggleTheme","newTheme","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","map","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/User/OneDrive/Desktop/chatsphere/src/components/ContactList.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { GlobalContext } from '../context/GlobalContext';\nimport useIndexedDB from '../hooks/useIndexedDB';\nimport '../styles/contactList.css';\n\nconst ContactList = () => {\n    const { contacts, theme, dispatch } = useContext(GlobalContext);\n    const { getFromDB, addToDB, deleteFromDB } = useIndexedDB();\n    const [newContactName, setNewContactName] = useState('');\n    const [newContactPic, setNewContactPic] = useState('');\n    const [selectedContact, setSelectedContact] = useState(null);\n    const [showForm, setShowForm] = useState(false); // Toggle for add contact form\n\n    useEffect(() => {\n        const fetchContacts = async () => {\n            try {\n                const storedContacts = await getFromDB('contacts');\n                if (storedContacts.length) {\n                    dispatch({ type: 'SET_CONTACTS', payload: storedContacts });\n                } else {\n                    const contactData = [\n                        { id: 1, name: 'Alice', pic: '' },\n                        { id: 2, name: 'Bob', pic: '' },\n                    ];\n                    contactData.forEach((contact) => addToDB('contacts', contact));\n                    dispatch({ type: 'SET_CONTACTS', payload: contactData });\n                }\n            } catch (error) {\n                console.error('Error fetching contacts:', error);\n            }\n        };\n\n        fetchContacts();\n    }, [dispatch, getFromDB, addToDB]);\n\n    // Add a new contact\n    const handleAddContact = async () => {\n        if (newContactName.trim()) {\n            const newContact = {\n                id: Date.now(),\n                name: newContactName,\n                pic: newContactPic || '', // Optional profile picture\n            };\n            await addToDB('contacts', newContact);\n            dispatch({ type: 'ADD_CONTACT', payload: newContact });\n            setNewContactName('');\n            setNewContactPic('');\n            setShowForm(false); // Close the form\n        }\n    };\n\n    // Delete a contact\n    const handleDeleteContact = async (id) => {\n        await deleteFromDB('contacts', id);\n        dispatch({ type: 'DELETE_CONTACT', payload: id });\n    };\n\n    // Toggle theme\n    const toggleTheme = () => {\n        const newTheme = theme === 'light' ? 'dark' : 'light';\n        dispatch({ type: 'SET_THEME', payload: newTheme });\n    };\n\n    return (\n        <div className={`contact-list ${theme}`}>\n            <div className=\"contact-list-header\">\n                <h2>\n                    Contacts\n                    <span className=\"add-contact-icon\" onClick={() => setShowForm(!showForm)}>\n                        ➕\n                    </span>\n                </h2>\n                <span className=\"theme-toggle\" onClick={toggleTheme}>\n                    🌗\n                </span>\n            </div>\n\n            {/* Add New Contact Form */}\n            {showForm && (\n                <div className=\"add-contact-form\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Enter contact name\"\n                        value={newContactName}\n                        onChange={(e) => setNewContactName(e.target.value)}\n                    />\n                    <input\n                        type=\"text\"\n                        placeholder=\"Enter profile picture URL (optional)\"\n                        value={newContactPic}\n                        onChange={(e) => setNewContactPic(e.target.value)}\n                    />\n                    <button onClick={handleAddContact}>Add Contact</button>\n                </div>\n            )}\n\n            {/* Contact List */}\n            {contacts.map((contact) => (\n                <div\n                    key={contact.id}\n                    className={`contact-item ${selectedContact === contact.id ? 'selected' : ''}`}\n                    onClick={() => setSelectedContact(contact.id)}\n                >\n                    <img\n                        src={contact.pic || 'https://via.placeholder.com/50'} // Default profile pic\n                        alt={contact.name}\n                        className=\"contact-pic\"\n                    />\n                    <div className=\"contact-info\">\n                        <span className=\"contact-name\">{contact.name}</span>\n                    </div>\n                    <div className=\"contact-actions\">\n                        <button onClick={() => handleDeleteContact(contact.id)}>Delete</button>\n                    </div>\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default ContactList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}