{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\chatsphere\\\\src\\\\components\\\\ContactList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { GlobalContext } from '../context/GlobalContext';\nimport useIndexedDB from '../hooks/useIndexedDB';\nimport '../styles/contactList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactList = () => {\n  _s();\n  const {\n    contacts,\n    dispatchContacts,\n    selectedContact,\n    setSelectedContact\n  } = useContext(GlobalContext);\n  const {\n    getFromDB,\n    addToDB,\n    deleteFromDB,\n    updateInDB\n  } = useIndexedDB();\n  const [newContactName, setNewContactName] = useState('');\n  const [newContactPic, setNewContactPic] = useState('');\n  const [showForm, setShowForm] = useState(false);\n  const [showOptions, setShowOptions] = useState(false);\n  const [optionsPosition, setOptionsPosition] = useState({\n    top: 0,\n    left: 0\n  }); // Position for options menu\n  const [showArchived, setShowArchived] = useState(false);\n  const [archivedContacts, setArchivedContacts] = useState([]);\n  const [theme, setTheme] = useState('light');\n  const [favorites, setFavorites] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(''); // State for search term\n\n  useEffect(() => {\n    const fetchContacts = async () => {\n      try {\n        const storedContacts = await getFromDB('contacts');\n        if (storedContacts.length) {\n          dispatchContacts({\n            type: 'SET_CONTACTS',\n            payload: storedContacts\n          });\n        } else {\n          const contactData = [{\n            id: 1,\n            name: 'Garvita',\n            pic: ''\n          }, {\n            id: 2,\n            name: 'Heena',\n            pic: ''\n          }, {\n            id: 3,\n            name: 'Sayani',\n            pic: ''\n          }];\n          contactData.forEach(contact => addToDB('contacts', contact));\n          dispatchContacts({\n            type: 'SET_CONTACTS',\n            payload: contactData\n          });\n        }\n      } catch (error) {\n        console.error('Error fetching contacts:', error);\n      }\n    };\n    fetchContacts();\n  }, [dispatchContacts, getFromDB, addToDB]);\n\n  // Filtered contacts based on search term\n  const filteredContacts = contacts.filter(contact => contact.name.toLowerCase().includes(searchTerm.toLowerCase()));\n\n  // Add a new contact\n  const handleAddContact = async () => {\n    if (newContactName.trim()) {\n      const newContact = {\n        id: Date.now(),\n        name: newContactName,\n        pic: newContactPic || ''\n      };\n      await addToDB('contacts', newContact);\n      dispatchContacts({\n        type: 'ADD_CONTACT',\n        payload: newContact\n      });\n      setNewContactName('');\n      setNewContactPic('');\n      setShowForm(false);\n    }\n  };\n\n  // Show contact options\n  const handleProfileClick = (event, contact) => {\n    setSelectedContact(contact.id);\n    const {\n      top,\n      left,\n      width,\n      height\n    } = event.target.getBoundingClientRect();\n    setOptionsPosition({\n      top: top + height,\n      left: left + width / 2\n    }); // Positioning the options menu\n    setShowOptions(true);\n  };\n\n  // Block contact\n  const handleBlockContact = id => {\n    console.log(`Contact with ID ${id} is blocked.`);\n    setShowOptions(false);\n  };\n\n  // Edit contact\n  const handleEditContact = id => {\n    const contactToEdit = contacts.find(contact => contact.id === id);\n    if (contactToEdit) {\n      setNewContactName(contactToEdit.name);\n      setShowForm(true);\n    }\n    setShowOptions(false);\n  };\n\n  // Add to favorites\n  const handleAddToFavorites = id => {\n    const contactToAdd = contacts.find(contact => contact.id === id);\n    if (contactToAdd) {\n      setFavorites(prev => [...prev, contactToAdd]);\n    }\n    setShowOptions(false);\n  };\n\n  // Delete a contact\n  const handleDeleteContact = async id => {\n    await deleteFromDB('contacts', id);\n    dispatchContacts({\n      type: 'DELETE_CONTACT',\n      payload: id\n    });\n  };\n\n  // Toggle Theme (Emoji Click)\n  const toggleTheme = () => {\n    const newTheme = theme === 'light' ? 'dark' : 'light';\n    setTheme(newTheme);\n    document.body.className = newTheme;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `contact-list ${theme}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search Contacts\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), showArchived && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"archived-contacts\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Archived Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"archivedItems\",\n        children: archivedContacts.map(contact => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contact-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"contact-pic-container\",\n            children: contact.pic ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: contact.pic,\n              alt: contact.name,\n              className: \"contact-pic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"contact-initial\",\n              children: contact.name[0].toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"contact-info\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"contact-name\",\n              children: contact.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 33\n          }, this)]\n        }, contact.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-list-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Contacts\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"add-contact-icon\",\n          onClick: () => setShowForm(!showForm),\n          children: \"\\u2795\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"theme-toggle\",\n          onClick: toggleTheme,\n          children: \"\\uD83C\\uDF17\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"archive-toggle-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowArchived(!showArchived),\n          children: showArchived ? 'Hide Archived' : 'Show Archived'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this), showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-contact-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter contact name\",\n        value: newContactName,\n        onChange: e => setNewContactName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter profile picture URL (optional)\",\n        value: newContactPic,\n        onChange: e => setNewContactPic(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 21\n      }, this), selectedContact ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdateContact,\n        children: \"Update Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddContact,\n        children: \"Add Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }, this), filteredContacts.map(contact => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `contact-item ${selectedContact === contact.id ? 'selected' : ''}`,\n      onClick: () => setSelectedContact(contact.id),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact-pic-container\",\n        onClick: e => handleProfileClick(e, contact),\n        children: contact.pic ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: contact.pic,\n          alt: contact.name,\n          className: \"contact-pic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contact-initial\",\n          children: contact.name[0].toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact-info\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"contact-name\",\n          children: contact.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 21\n      }, this), favorites.some(fav => fav.id === contact.id) && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"favorite-icon\",\n        children: \"\\u2764\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 72\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleArchiveContact(contact),\n        children: \"Archive\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 21\n      }, this)]\n    }, contact.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }, this)), showOptions && selectedContact && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-options\",\n      style: {\n        top: `${optionsPosition.top}px`,\n        left: `${optionsPosition.left}px`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleBlockContact(selectedContact),\n        children: \"Block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleEditContact(selectedContact),\n        children: \"Edit Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAddToFavorites(selectedContact),\n        children: \"Add to Favorites\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDeleteContact(selectedContact),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n};\n_s(ContactList, \"Nl+Tw1x4i6+Ad8PepDYVpOFWYE0=\", false, function () {\n  return [useIndexedDB];\n});\n_c = ContactList;\nexport default ContactList;\nvar _c;\n$RefreshReg$(_c, \"ContactList\");","map":{"version":3,"names":["React","useContext","useEffect","useState","GlobalContext","useIndexedDB","jsxDEV","_jsxDEV","ContactList","_s","contacts","dispatchContacts","selectedContact","setSelectedContact","getFromDB","addToDB","deleteFromDB","updateInDB","newContactName","setNewContactName","newContactPic","setNewContactPic","showForm","setShowForm","showOptions","setShowOptions","optionsPosition","setOptionsPosition","top","left","showArchived","setShowArchived","archivedContacts","setArchivedContacts","theme","setTheme","favorites","setFavorites","searchTerm","setSearchTerm","fetchContacts","storedContacts","length","type","payload","contactData","id","name","pic","forEach","contact","error","console","filteredContacts","filter","toLowerCase","includes","handleAddContact","trim","newContact","Date","now","handleProfileClick","event","width","height","target","getBoundingClientRect","handleBlockContact","log","handleEditContact","contactToEdit","find","handleAddToFavorites","contactToAdd","prev","handleDeleteContact","toggleTheme","newTheme","document","body","className","children","placeholder","value","onChange","e","fileName","_jsxFileName","lineNumber","columnNumber","map","src","alt","toUpperCase","onClick","handleUpdateContact","some","fav","handleArchiveContact","style","_c","$RefreshReg$"],"sources":["C:/Users/User/OneDrive/Desktop/chatsphere/src/components/ContactList.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { GlobalContext } from '../context/GlobalContext';\nimport useIndexedDB from '../hooks/useIndexedDB';\nimport '../styles/contactList.css';\n\nconst ContactList = () => {\n    const {\n        contacts,\n        dispatchContacts,\n        selectedContact,\n        setSelectedContact\n    } = useContext(GlobalContext);\n\n    const {\n        getFromDB,\n        addToDB,\n        deleteFromDB,\n        updateInDB\n    } = useIndexedDB();\n\n    const [newContactName, setNewContactName] = useState('');\n    const [newContactPic, setNewContactPic] = useState('');\n    const [showForm, setShowForm] = useState(false);\n    const [showOptions, setShowOptions] = useState(false);\n    const [optionsPosition, setOptionsPosition] = useState({ top: 0, left: 0 }); // Position for options menu\n    const [showArchived, setShowArchived] = useState(false);\n    const [archivedContacts, setArchivedContacts] = useState([]);\n    const [theme, setTheme] = useState('light');\n    const [favorites, setFavorites] = useState([]);\n    const [searchTerm, setSearchTerm] = useState(''); // State for search term\n\n    useEffect(() => {\n        const fetchContacts = async () => {\n            try {\n                const storedContacts = await getFromDB('contacts');\n                if (storedContacts.length) {\n                    dispatchContacts({ type: 'SET_CONTACTS', payload: storedContacts });\n                } else {\n                    const contactData = [\n                        { id: 1, name: 'Garvita', pic: '' },\n                        { id: 2, name: 'Heena', pic: '' },\n                        { id: 3, name: 'Sayani', pic: '' }\n                    ];\n                    contactData.forEach((contact) => addToDB('contacts', contact));\n                    dispatchContacts({ type: 'SET_CONTACTS', payload: contactData });\n                }\n            } catch (error) {\n                console.error('Error fetching contacts:', error);\n            }\n        };\n        fetchContacts();\n    }, [dispatchContacts, getFromDB, addToDB]);\n\n    // Filtered contacts based on search term\n    const filteredContacts = contacts.filter((contact) =>\n        contact.name.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n\n    // Add a new contact\n    const handleAddContact = async () => {\n        if (newContactName.trim()) {\n            const newContact = { id: Date.now(), name: newContactName, pic: newContactPic || '' };\n            await addToDB('contacts', newContact);\n            dispatchContacts({ type: 'ADD_CONTACT', payload: newContact });\n            setNewContactName('');\n            setNewContactPic('');\n            setShowForm(false);\n        }\n    };\n\n    // Show contact options\n    const handleProfileClick = (event, contact) => {\n        setSelectedContact(contact.id);\n        const { top, left, width, height } = event.target.getBoundingClientRect();\n        setOptionsPosition({ top: top + height, left: left + width / 2 }); // Positioning the options menu\n        setShowOptions(true);\n    };\n\n    // Block contact\n    const handleBlockContact = (id) => {\n        console.log(`Contact with ID ${id} is blocked.`);\n        setShowOptions(false);\n    };\n\n    // Edit contact\n    const handleEditContact = (id) => {\n        const contactToEdit = contacts.find((contact) => contact.id === id);\n        if (contactToEdit) {\n            setNewContactName(contactToEdit.name);\n            setShowForm(true);\n        }\n        setShowOptions(false);\n    };\n\n    // Add to favorites\n    const handleAddToFavorites = (id) => {\n        const contactToAdd = contacts.find((contact) => contact.id === id);\n        if (contactToAdd) {\n            setFavorites((prev) => [...prev, contactToAdd]);\n        }\n        setShowOptions(false);\n    };\n\n    // Delete a contact\n    const handleDeleteContact = async (id) => {\n        await deleteFromDB('contacts', id);\n        dispatchContacts({ type: 'DELETE_CONTACT', payload: id });\n    };\n\n    // Toggle Theme (Emoji Click)\n    const toggleTheme = () => {\n        const newTheme = theme === 'light' ? 'dark' : 'light';\n        setTheme(newTheme);\n        document.body.className = newTheme;\n    };\n\n    return (\n        <div className={`contact-list ${theme}`}>\n            {/* Search Bar */}\n            <div className=\"search-bar\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Search Contacts\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                />\n            </div>\n\n            {/* Archived Contacts Section */}\n            {showArchived && (\n                <div className=\"archived-contacts\">\n                    <h3>Archived Contacts</h3>\n                    <div id=\"archivedItems\">\n                        {archivedContacts.map((contact) => (\n                            <div key={contact.id} className=\"contact-item\">\n                                <div className=\"contact-pic-container\">\n                                    {contact.pic ? (\n                                        <img\n                                            src={contact.pic}\n                                            alt={contact.name}\n                                            className=\"contact-pic\"\n                                        />\n                                    ) : (\n                                        <div className=\"contact-initial\">{contact.name[0].toUpperCase()}</div>\n                                    )}\n                                </div>\n                                <div className=\"contact-info\">\n                                    <span className=\"contact-name\">{contact.name}</span>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            )}\n\n            {/* Contact List Header */}\n            <div className=\"contact-list-header\">\n                <h2>\n                    Contacts\n                    <span className=\"add-contact-icon\" onClick={() => setShowForm(!showForm)}>\n                        ➕\n                    </span>\n                    <span className=\"theme-toggle\" onClick={toggleTheme}>\n                        🌗\n                    </span>\n                </h2>\n                <div className=\"archive-toggle-container\">\n                    <button onClick={() => setShowArchived(!showArchived)}>\n                        {showArchived ? 'Hide Archived' : 'Show Archived'}\n                    </button>\n                </div>\n            </div>\n\n            {/* Add/Edit Contact Form */}\n            {showForm && (\n                <div className=\"add-contact-form\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Enter contact name\"\n                        value={newContactName}\n                        onChange={(e) => setNewContactName(e.target.value)}\n                    />\n                    <input\n                        type=\"text\"\n                        placeholder=\"Enter profile picture URL (optional)\"\n                        value={newContactPic}\n                        onChange={(e) => setNewContactPic(e.target.value)}\n                    />\n                    {selectedContact ? (\n                        <button onClick={handleUpdateContact}>Update Contact</button>\n                    ) : (\n                        <button onClick={handleAddContact}>Add Contact</button>\n                    )}\n                </div>\n            )}\n\n            {/* Contact List */}\n            {filteredContacts.map((contact) => (\n                <div\n                    key={contact.id}\n                    className={`contact-item ${selectedContact === contact.id ? 'selected' : ''}`}\n                    onClick={() => setSelectedContact(contact.id)}\n                >\n                    <div className=\"contact-pic-container\" onClick={(e) => handleProfileClick(e, contact)}>\n                        {contact.pic ? (\n                            <img\n                                src={contact.pic}\n                                alt={contact.name}\n                                className=\"contact-pic\"\n                            />\n                        ) : (\n                            <div className=\"contact-initial\">{contact.name[0].toUpperCase()}</div>\n                        )}\n                    </div>\n\n                    <div className=\"contact-info\">\n                        <span className=\"contact-name\">{contact.name}</span>\n                    </div>\n                    {favorites.some((fav) => fav.id === contact.id) && <span className=\"favorite-icon\">❤️</span>}\n                    <button onClick={() => handleArchiveContact(contact)}>Archive</button>\n                </div>\n            ))}\n\n            {/* Contact Options Menu */}\n            {showOptions && selectedContact && (\n                <div\n                    className=\"contact-options\"\n                    style={{ top: `${optionsPosition.top}px`, left: `${optionsPosition.left}px` }}\n                >\n                    <button onClick={() => handleBlockContact(selectedContact)}>Block</button>\n                    <button onClick={() => handleEditContact(selectedContact)}>Edit Contact</button>\n                    <button onClick={() => handleAddToFavorites(selectedContact)}>Add to Favorites</button>\n                    <button onClick={() => handleDeleteContact(selectedContact)}>Delete</button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default ContactList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}