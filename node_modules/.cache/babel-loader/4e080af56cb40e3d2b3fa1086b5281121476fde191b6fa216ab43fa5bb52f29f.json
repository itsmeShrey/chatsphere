{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\chatsphere\\\\src\\\\components\\\\MessageInput.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport { GlobalContext } from '../context/GlobalContext';\nimport useIndexedDB from '../hooks/useIndexedDB';\nimport '../styles/messageInput.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emojis = [\"😀\", \"😁\", \"😂\", \"🤣\", \"😃\", \"😄\", \"😅\", \"😆\", \"😉\", \"😊\", \"😋\", \"😎\", \"😍\", \"😘\", \"😗\", \"😙\", \"😚\", \"🙂\", \"🤗\", \"🤔\", \"😐\", \"😑\", \"😶\", \"🙄\", \"😏\", \"😣\", \"😥\", \"😮\", \"🤐\", \"😯\"\n// Add more emojis as needed\n];\nconst MessageInput = () => {\n  _s();\n  const [input, setInput] = useState('');\n  const [emojiPickerVisible, setEmojiPickerVisible] = useState(false);\n  const [attachmentMenuVisible, setAttachmentMenuVisible] = useState(false);\n  const {\n    dispatchMessages,\n    selectedContact\n  } = useContext(GlobalContext);\n  const {\n    addToDB\n  } = useIndexedDB();\n  const handleSend = async () => {\n    if (!selectedContact) return;\n    const newMessage = {\n      id: Date.now(),\n      text: input,\n      sender: 'me',\n      timestamp: new Date().toLocaleTimeString(),\n      contactId: selectedContact\n    };\n    try {\n      await addToDB('messages', newMessage);\n      dispatchMessages({\n        type: 'ADD_MESSAGE',\n        payload: newMessage\n      });\n      setInput('');\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n  const handleEmojiClick = emoji => {\n    setInput(input + emoji);\n    setEmojiPickerVisible(false);\n  };\n  const handleClickOutside = e => {\n    if (!e.target.closest('.emoji-picker') && !e.target.closest('.attachment-menu')) {\n      setEmojiPickerVisible(false);\n      setAttachmentMenuVisible(false);\n    }\n  };\n  React.useEffect(() => {\n    document.addEventListener('click', handleClickOutside);\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"attachment-menu\",\n      style: {\n        display: attachmentMenuVisible ? 'block' : 'none'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => alert('Upload Image/Video'),\n        children: \"\\uD83D\\uDCF7 Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => alert('Share Contact'),\n        children: \"\\uD83D\\uDCC7 Share Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"emoji-picker\",\n      style: {\n        display: emojiPickerVisible ? 'block' : 'none'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"emoji-search\",\n        children: \"Search emojis...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"emoji-list\",\n        children: emojis.map((emoji, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => handleEmojiClick(emoji),\n          children: emoji\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"attachment-button\",\n      onClick: () => setAttachmentMenuVisible(!attachmentMenuVisible),\n      children: \"\\uD83D\\uDCCE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"emoji-button\",\n      onClick: () => setEmojiPickerVisible(!emojiPickerVisible),\n      children: \"\\uD83D\\uDE0A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: e => setInput(e.target.value),\n      placeholder: \"Type a message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSend,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"voice-note-button\",\n      onClick: () => alert('Record voice note'),\n      children: \"\\uD83C\\uDFA4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(MessageInput, \"8WbEYFZRPs14ilrOup4lioaQRsw=\", false, function () {\n  return [useIndexedDB];\n});\n_c = MessageInput;\nexport default MessageInput;\nvar _c;\n$RefreshReg$(_c, \"MessageInput\");","map":{"version":3,"names":["React","useContext","useState","GlobalContext","useIndexedDB","jsxDEV","_jsxDEV","emojis","MessageInput","_s","input","setInput","emojiPickerVisible","setEmojiPickerVisible","attachmentMenuVisible","setAttachmentMenuVisible","dispatchMessages","selectedContact","addToDB","handleSend","newMessage","id","Date","now","text","sender","timestamp","toLocaleTimeString","contactId","type","payload","error","console","handleEmojiClick","emoji","handleClickOutside","e","target","closest","useEffect","document","addEventListener","removeEventListener","className","children","style","display","onClick","alert","fileName","_jsxFileName","lineNumber","columnNumber","map","index","value","onChange","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/User/OneDrive/Desktop/chatsphere/src/components/MessageInput.jsx"],"sourcesContent":["import React, { useContext, useState } from 'react';\nimport { GlobalContext } from '../context/GlobalContext';\nimport useIndexedDB from '../hooks/useIndexedDB';\nimport '../styles/messageInput.css';\n\nconst emojis = [\n    \"😀\", \"😁\", \"😂\", \"🤣\", \"😃\", \"😄\", \"😅\", \"😆\", \"😉\", \"😊\",\n    \"😋\", \"😎\", \"😍\", \"😘\", \"😗\", \"😙\", \"😚\", \"🙂\", \"🤗\", \"🤔\",\n    \"😐\", \"😑\", \"😶\", \"🙄\", \"😏\", \"😣\", \"😥\", \"😮\", \"🤐\", \"😯\",\n    // Add more emojis as needed\n];\n\nconst MessageInput = () => {\n    const [input, setInput] = useState('');\n    const [emojiPickerVisible, setEmojiPickerVisible] = useState(false);\n    const [attachmentMenuVisible, setAttachmentMenuVisible] = useState(false);\n    const { dispatchMessages, selectedContact } = useContext(GlobalContext);\n    const { addToDB } = useIndexedDB();\n\n    const handleSend = async () => {\n        if (!selectedContact) return;\n\n        const newMessage = {\n            id: Date.now(),\n            text: input,\n            sender: 'me',\n            timestamp: new Date().toLocaleTimeString(),\n            contactId: selectedContact,\n        };\n\n        try {\n            await addToDB('messages', newMessage);\n            dispatchMessages({ type: 'ADD_MESSAGE', payload: newMessage });\n            setInput('');\n        } catch (error) {\n            console.error('Error sending message:', error);\n        }\n    };\n\n    const handleEmojiClick = (emoji) => {\n        setInput(input + emoji);\n        setEmojiPickerVisible(false);\n    };\n\n    const handleClickOutside = (e) => {\n        if (!e.target.closest('.emoji-picker') && !e.target.closest('.attachment-menu')) {\n            setEmojiPickerVisible(false);\n            setAttachmentMenuVisible(false);\n        }\n    };\n\n    React.useEffect(() => {\n        document.addEventListener('click', handleClickOutside);\n        return () => {\n            document.removeEventListener('click', handleClickOutside);\n        };\n    }, []);\n\n    return (\n        <div className=\"message-input-container\">\n            <div className=\"attachment-menu\" style={{ display: attachmentMenuVisible ? 'block' : 'none' }}>\n                <button onClick={() => alert('Upload Image/Video')}>📷 Upload</button>\n                <button onClick={() => alert('Share Contact')}>📇 Share Contact</button>\n            </div>\n            <div className=\"emoji-picker\" style={{ display: emojiPickerVisible ? 'block' : 'none' }}>\n                <div className=\"emoji-search\">Search emojis...</div>\n                <div className=\"emoji-list\">\n                    {emojis.map((emoji, index) => (\n                        <span key={index} onClick={() => handleEmojiClick(emoji)}>{emoji}</span>\n                    ))}\n                </div>\n            </div>\n            <button className=\"attachment-button\" onClick={() => setAttachmentMenuVisible(!attachmentMenuVisible)}>📎</button>\n            <button className=\"emoji-button\" onClick={() => setEmojiPickerVisible(!emojiPickerVisible)}>😊</button>\n            <input\n                type=\"text\"\n                value={input}\n                onChange={(e) => setInput(e.target.value)}\n                placeholder=\"Type a message\"\n            />\n            <button onClick={handleSend}>Send</button>\n            <button className=\"voice-note-button\" onClick={() => alert('Record voice note')}>🎤</button>\n        </div>\n    );\n};\n\nexport default MessageInput;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}