{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\chatsphere\\\\src\\\\components\\\\MessageInput.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport { GlobalContext } from '../context/GlobalContext';\nimport useIndexedDB from '../hooks/useIndexedDB';\nimport '../styles/messageInput.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageInput = () => {\n  _s();\n  const [input, setInput] = useState('');\n  const [media, setMedia] = useState(null); // State for attached media\n  const {\n    dispatchMessages,\n    selectedContact\n  } = useContext(GlobalContext);\n  const {\n    addToDB\n  } = useIndexedDB();\n  const handleSend = async () => {\n    if (!selectedContact || !input && !media) return; // Prevent sending empty messages\n\n    const newMessage = {\n      id: Date.now(),\n      text: input,\n      media,\n      // Add media to the message\n      sender: 'me',\n      timestamp: new Date().toLocaleTimeString(),\n      contactId: selectedContact // Associate with selected contact\n    };\n    try {\n      await addToDB('messages', newMessage);\n      dispatchMessages({\n        type: 'ADD_MESSAGE',\n        payload: newMessage\n      });\n      setInput('');\n      setMedia(null); // Reset media state after sending\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    if (file) {\n      setMedia(URL.createObjectURL(file)); // Create a preview URL for the file\n    }\n  };\n  const handleEmojiClick = emoji => {\n    setInput(prev => prev + emoji);\n  };\n  const handleContactShare = () => {\n    const contactInfo = {\n      name: 'John Doe',\n      phone: '123-456-7890'\n    };\n    const newMessage = {\n      id: Date.now(),\n      text: `Contact shared: ${contactInfo.name} - ${contactInfo.phone}`,\n      sender: 'me',\n      timestamp: new Date().toLocaleTimeString(),\n      contactId: selectedContact\n    };\n    try {\n      addToDB('messages', newMessage);\n      dispatchMessages({\n        type: 'ADD_MESSAGE',\n        payload: newMessage\n      });\n    } catch (error) {\n      console.error('Error sharing contact:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-input\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: e => setInput(e.target.value),\n      placeholder: \"Type a message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*,video/*\",\n      onChange: handleFileChange,\n      style: {\n        display: 'none'\n      },\n      id: \"media-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"media-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\uD83D\\uDCCE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleEmojiClick('ðŸ˜Š'),\n      children: \"\\uD83D\\uDE0A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleContactShare,\n      children: \"Share Contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSend,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_s(MessageInput, \"bHtZTGsRqeI3qNAjI8/sLPdnOyo=\", false, function () {\n  return [useIndexedDB];\n});\n_c = MessageInput;\nexport default MessageInput;\nvar _c;\n$RefreshReg$(_c, \"MessageInput\");","map":{"version":3,"names":["React","useContext","useState","GlobalContext","useIndexedDB","jsxDEV","_jsxDEV","MessageInput","_s","input","setInput","media","setMedia","dispatchMessages","selectedContact","addToDB","handleSend","newMessage","id","Date","now","text","sender","timestamp","toLocaleTimeString","contactId","type","payload","error","console","handleFileChange","event","file","target","files","URL","createObjectURL","handleEmojiClick","emoji","prev","handleContactShare","contactInfo","name","phone","className","children","value","onChange","e","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","accept","style","display","htmlFor","onClick","_c","$RefreshReg$"],"sources":["C:/Users/User/OneDrive/Desktop/chatsphere/src/components/MessageInput.jsx"],"sourcesContent":["import React, { useContext, useState } from 'react';\nimport { GlobalContext } from '../context/GlobalContext';\nimport useIndexedDB from '../hooks/useIndexedDB';\nimport '../styles/messageInput.css';\n\nconst MessageInput = () => {\n    const [input, setInput] = useState('');\n    const [media, setMedia] = useState(null); // State for attached media\n    const { dispatchMessages, selectedContact } = useContext(GlobalContext);\n    const { addToDB } = useIndexedDB();\n\n    const handleSend = async () => {\n        if (!selectedContact || (!input && !media)) return; // Prevent sending empty messages\n\n        const newMessage = {\n            id: Date.now(),\n            text: input,\n            media, // Add media to the message\n            sender: 'me',\n            timestamp: new Date().toLocaleTimeString(),\n            contactId: selectedContact, // Associate with selected contact\n        };\n\n        try {\n            await addToDB('messages', newMessage);\n            dispatchMessages({ type: 'ADD_MESSAGE', payload: newMessage });\n            setInput('');\n            setMedia(null); // Reset media state after sending\n        } catch (error) {\n            console.error('Error sending message:', error);\n        }\n    };\n\n    const handleFileChange = (event) => {\n        const file = event.target.files[0];\n        if (file) {\n            setMedia(URL.createObjectURL(file)); // Create a preview URL for the file\n        }\n    };\n\n    const handleEmojiClick = (emoji) => {\n        setInput((prev) => prev + emoji);\n    };\n\n    const handleContactShare = () => {\n        const contactInfo = {\n            name: 'John Doe',\n            phone: '123-456-7890',\n        };\n\n        const newMessage = {\n            id: Date.now(),\n            text: `Contact shared: ${contactInfo.name} - ${contactInfo.phone}`,\n            sender: 'me',\n            timestamp: new Date().toLocaleTimeString(),\n            contactId: selectedContact,\n        };\n\n        try {\n            addToDB('messages', newMessage);\n            dispatchMessages({ type: 'ADD_MESSAGE', payload: newMessage });\n        } catch (error) {\n            console.error('Error sharing contact:', error);\n        }\n    };\n\n    return (\n        <div className=\"message-input\">\n            <input\n                type=\"text\"\n                value={input}\n                onChange={(e) => setInput(e.target.value)}\n                placeholder=\"Type a message\"\n            />\n            <input\n                type=\"file\"\n                accept=\"image/*,video/*\"\n                onChange={handleFileChange}\n                style={{ display: 'none' }}\n                id=\"media-input\"\n            />\n            <label htmlFor=\"media-input\">\n                <button>ðŸ“Ž</button> {/* Attach icon */}\n            </label>\n            <button onClick={() => handleEmojiClick('ðŸ˜Š')}>ðŸ˜Š</button> {/* Emoji picker placeholder */}\n            <button onClick={handleContactShare}>Share Contact</button>\n            <button onClick={handleSend}>Send</button>\n        </div>\n    );\n};\n\nexport default MessageInput;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,SAASC,aAAa,QAAQ,0BAA0B;AACxD,OAAOC,YAAY,MAAM,uBAAuB;AAChD,OAAO,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC1C,MAAM;IAAEW,gBAAgB;IAAEC;EAAgB,CAAC,GAAGb,UAAU,CAACE,aAAa,CAAC;EACvE,MAAM;IAAEY;EAAQ,CAAC,GAAGX,YAAY,CAAC,CAAC;EAElC,MAAMY,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI,CAACF,eAAe,IAAK,CAACL,KAAK,IAAI,CAACE,KAAM,EAAE,OAAO,CAAC;;IAEpD,MAAMM,UAAU,GAAG;MACfC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MACdC,IAAI,EAAEZ,KAAK;MACXE,KAAK;MAAE;MACPW,MAAM,EAAE,IAAI;MACZC,SAAS,EAAE,IAAIJ,IAAI,CAAC,CAAC,CAACK,kBAAkB,CAAC,CAAC;MAC1CC,SAAS,EAAEX,eAAe,CAAE;IAChC,CAAC;IAED,IAAI;MACA,MAAMC,OAAO,CAAC,UAAU,EAAEE,UAAU,CAAC;MACrCJ,gBAAgB,CAAC;QAAEa,IAAI,EAAE,aAAa;QAAEC,OAAO,EAAEV;MAAW,CAAC,CAAC;MAC9DP,QAAQ,CAAC,EAAE,CAAC;MACZE,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAClD;EACJ,CAAC;EAED,MAAME,gBAAgB,GAAIC,KAAK,IAAK;IAChC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAIF,IAAI,EAAE;MACNpB,QAAQ,CAACuB,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC,CAAC,CAAC,CAAC;IACzC;EACJ,CAAC;EAED,MAAMK,gBAAgB,GAAIC,KAAK,IAAK;IAChC5B,QAAQ,CAAE6B,IAAI,IAAKA,IAAI,GAAGD,KAAK,CAAC;EACpC,CAAC;EAED,MAAME,kBAAkB,GAAGA,CAAA,KAAM;IAC7B,MAAMC,WAAW,GAAG;MAChBC,IAAI,EAAE,UAAU;MAChBC,KAAK,EAAE;IACX,CAAC;IAED,MAAM1B,UAAU,GAAG;MACfC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MACdC,IAAI,EAAE,mBAAmBoB,WAAW,CAACC,IAAI,MAAMD,WAAW,CAACE,KAAK,EAAE;MAClErB,MAAM,EAAE,IAAI;MACZC,SAAS,EAAE,IAAIJ,IAAI,CAAC,CAAC,CAACK,kBAAkB,CAAC,CAAC;MAC1CC,SAAS,EAAEX;IACf,CAAC;IAED,IAAI;MACAC,OAAO,CAAC,UAAU,EAAEE,UAAU,CAAC;MAC/BJ,gBAAgB,CAAC;QAAEa,IAAI,EAAE,aAAa;QAAEC,OAAO,EAAEV;MAAW,CAAC,CAAC;IAClE,CAAC,CAAC,OAAOW,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAClD;EACJ,CAAC;EAED,oBACItB,OAAA;IAAKsC,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC1BvC,OAAA;MACIoB,IAAI,EAAC,MAAM;MACXoB,KAAK,EAAErC,KAAM;MACbsC,QAAQ,EAAGC,CAAC,IAAKtC,QAAQ,CAACsC,CAAC,CAACf,MAAM,CAACa,KAAK,CAAE;MAC1CG,WAAW,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eACF/C,OAAA;MACIoB,IAAI,EAAC,MAAM;MACX4B,MAAM,EAAC,iBAAiB;MACxBP,QAAQ,EAAEjB,gBAAiB;MAC3ByB,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO,CAAE;MAC3BtC,EAAE,EAAC;IAAa;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC,eACF/C,OAAA;MAAOmD,OAAO,EAAC,aAAa;MAAAZ,QAAA,gBACxBvC,OAAA;QAAAuC,QAAA,EAAQ;MAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC,eACR/C,OAAA;MAAQoD,OAAO,EAAEA,CAAA,KAAMrB,gBAAgB,CAAC,IAAI,CAAE;MAAAQ,QAAA,EAAC;IAAE;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,KAAC,eAC3D/C,OAAA;MAAQoD,OAAO,EAAElB,kBAAmB;MAAAK,QAAA,EAAC;IAAa;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC3D/C,OAAA;MAAQoD,OAAO,EAAE1C,UAAW;MAAA6B,QAAA,EAAC;IAAI;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEd,CAAC;AAAC7C,EAAA,CApFID,YAAY;EAAA,QAIMH,YAAY;AAAA;AAAAuD,EAAA,GAJ9BpD,YAAY;AAsFlB,eAAeA,YAAY;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}