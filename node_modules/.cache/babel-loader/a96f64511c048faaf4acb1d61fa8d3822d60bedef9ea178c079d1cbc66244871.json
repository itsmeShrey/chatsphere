{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\chatsphere\\\\src\\\\components\\\\ContactList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { GlobalContext } from '../context/GlobalContext';\nimport useIndexedDB from '../hooks/useIndexedDB';\nimport '../styles/contactList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactList = () => {\n  _s();\n  const {\n    contacts,\n    dispatchContacts,\n    selectedContact,\n    setSelectedContact\n  } = useContext(GlobalContext);\n  const {\n    getFromDB,\n    addToDB,\n    deleteFromDB,\n    updateInDB\n  } = useIndexedDB();\n  const [newContactName, setNewContactName] = useState('');\n  const [newContactPic, setNewContactPic] = useState('');\n  const [showForm, setShowForm] = useState(false);\n  const [showOptions, setShowOptions] = useState(false);\n  const [showArchived, setShowArchived] = useState(false);\n  const [archivedContacts, setArchivedContacts] = useState([]);\n  const [theme, setTheme] = useState('light');\n  const [favorites, setFavorites] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(''); // State for search query\n\n  // Fetch contacts from IndexedDB or static data\n  useEffect(() => {\n    const fetchContacts = async () => {\n      try {\n        const storedContacts = await getFromDB('contacts');\n        if (storedContacts.length) {\n          dispatchContacts({\n            type: 'SET_CONTACTS',\n            payload: storedContacts\n          });\n        } else {\n          const contactData = [{\n            id: 1,\n            name: 'Garvita',\n            pic: ''\n          }, {\n            id: 2,\n            name: 'Heena',\n            pic: ''\n          }, {\n            id: 3,\n            name: 'Sayani',\n            pic: ''\n          }\n          // Add more contacts here\n          ];\n          contactData.forEach(contact => addToDB('contacts', contact));\n          dispatchContacts({\n            type: 'SET_CONTACTS',\n            payload: contactData\n          });\n        }\n      } catch (error) {\n        console.error('Error fetching contacts:', error);\n      }\n    };\n    fetchContacts();\n  }, [dispatchContacts, getFromDB, addToDB]);\n\n  // Add a new contact\n  const handleAddContact = async () => {\n    if (newContactName.trim()) {\n      const newContact = {\n        id: Date.now(),\n        name: newContactName,\n        pic: newContactPic || ''\n      };\n      await addToDB('contacts', newContact);\n      dispatchContacts({\n        type: 'ADD_CONTACT',\n        payload: newContact\n      });\n      setNewContactName('');\n      setNewContactPic('');\n      setShowForm(false); // Close the form\n    }\n  };\n\n  // Delete a contact\n  const handleDeleteContact = async id => {\n    await deleteFromDB('contacts', id);\n    dispatchContacts({\n      type: 'DELETE_CONTACT',\n      payload: id\n    });\n  };\n\n  // Archive contact\n  const handleArchiveContact = contact => {\n    setArchivedContacts(prev => [...prev, contact]);\n    handleDeleteContact(contact.id); // Remove from the active contacts list\n  };\n\n  // Show contact options\n  const handleProfileClick = contact => {\n    setSelectedContact(contact.id);\n    setShowOptions(true);\n  };\n\n  // Block contact (add your own logic)\n  const handleBlockContact = id => {\n    console.log(`Contact with ID ${id} is blocked.`);\n    setShowOptions(false);\n  };\n\n  // Edit contact (opens form to edit name)\n  const handleEditContact = id => {\n    const contactToEdit = contacts.find(contact => contact.id === id);\n    if (contactToEdit) {\n      setNewContactName(contactToEdit.name);\n      setShowForm(true); // Show the form to edit contact\n    }\n    setShowOptions(false);\n  };\n\n  // Update the contact's name\n  const handleUpdateContact = async () => {\n    if (newContactName.trim() && selectedContact) {\n      const updatedContact = {\n        id: selectedContact,\n        name: newContactName,\n        pic: newContactPic || ''\n      };\n      await updateInDB('contacts', updatedContact);\n      dispatchContacts({\n        type: 'UPDATE_CONTACT',\n        payload: updatedContact\n      });\n      setNewContactName('');\n      setNewContactPic('');\n      setShowForm(false);\n    }\n  };\n\n  // Add to favorites\n  const handleAddToFavorites = id => {\n    const contactToAdd = contacts.find(contact => contact.id === id);\n    if (contactToAdd) {\n      setFavorites(prev => [...prev, contactToAdd]);\n    }\n    setShowOptions(false);\n  };\n\n  // Toggle Theme (Emoji Click)\n  const toggleTheme = () => {\n    const newTheme = theme === 'light' ? 'dark' : 'light';\n    setTheme(newTheme);\n    document.body.className = newTheme;\n  };\n\n  // Filter contacts based on search query\n  const filteredContacts = contacts.filter(contact => contact.name.toLowerCase().includes(searchQuery.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `contact-list ${theme}`,\n    children: [showArchived && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"archived-contacts\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Archived Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"archivedItems\",\n        children: archivedContacts.map(contact => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contact-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"contact-pic-container\",\n            children: contact.pic ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: contact.pic,\n              alt: contact.name,\n              className: \"contact-pic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"contact-initial\",\n              children: contact.name[0].toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"contact-info\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"contact-name\",\n              children: contact.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 33\n          }, this)]\n        }, contact.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-list-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Chats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"add-contact-icon\",\n        onClick: () => setShowForm(!showForm),\n        children: \"\\u2795\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"theme-toggle\",\n        onClick: toggleTheme,\n        children: \"\\uD83C\\uDF17\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search contacts\",\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value),\n        className: \"search-bar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this), showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-contact-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter contact name\",\n        value: newContactName,\n        onChange: e => setNewContactName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter profile picture URL (optional)\",\n        value: newContactPic,\n        onChange: e => setNewContactPic(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 21\n      }, this), selectedContact ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdateContact,\n        children: \"Update Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddContact,\n        children: \"Add Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-list-container\",\n      children: filteredContacts.map(contact => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `contact-item ${selectedContact === contact.id ? 'selected' : ''}`,\n        onClick: () => setSelectedContact(contact.id),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contact-pic-container\",\n          onClick: () => handleProfileClick(contact),\n          children: contact.pic ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: contact.pic,\n            alt: contact.name,\n            className: \"contact-pic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"contact-initial\",\n            children: contact.name[0].toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contact-info\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"contact-name\",\n            children: contact.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 25\n        }, this), favorites.some(fav => fav.id === contact.id) && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"favorite-icon\",\n          children: \"\\u2764\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleArchiveContact(contact),\n          children: \"Archive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAddToFavorites(selectedContact),\n          children: \"Pin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 25\n        }, this)]\n      }, contact.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, this), showOptions && selectedContact && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-options\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleEditContact(selectedContact),\n        children: \"Edit Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDeleteContact(selectedContact),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 9\n  }, this);\n};\n_s(ContactList, \"lK66bNhQ0YZDJdLSyIA+mcDKvdw=\", false, function () {\n  return [useIndexedDB];\n});\n_c = ContactList;\nexport default ContactList;\nvar _c;\n$RefreshReg$(_c, \"ContactList\");","map":{"version":3,"names":["React","useContext","useEffect","useState","GlobalContext","useIndexedDB","jsxDEV","_jsxDEV","ContactList","_s","contacts","dispatchContacts","selectedContact","setSelectedContact","getFromDB","addToDB","deleteFromDB","updateInDB","newContactName","setNewContactName","newContactPic","setNewContactPic","showForm","setShowForm","showOptions","setShowOptions","showArchived","setShowArchived","archivedContacts","setArchivedContacts","theme","setTheme","favorites","setFavorites","searchQuery","setSearchQuery","fetchContacts","storedContacts","length","type","payload","contactData","id","name","pic","forEach","contact","error","console","handleAddContact","trim","newContact","Date","now","handleDeleteContact","handleArchiveContact","prev","handleProfileClick","handleBlockContact","log","handleEditContact","contactToEdit","find","handleUpdateContact","updatedContact","handleAddToFavorites","contactToAdd","toggleTheme","newTheme","document","body","className","filteredContacts","filter","toLowerCase","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","map","src","alt","toUpperCase","onClick","placeholder","value","onChange","e","target","some","fav","_c","$RefreshReg$"],"sources":["C:/Users/User/OneDrive/Desktop/chatsphere/src/components/ContactList.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { GlobalContext } from '../context/GlobalContext';\nimport useIndexedDB from '../hooks/useIndexedDB';\nimport '../styles/contactList.css';\n\nconst ContactList = () => {\n    const { contacts, dispatchContacts, selectedContact, setSelectedContact } = useContext(GlobalContext);\n    const { getFromDB, addToDB, deleteFromDB, updateInDB } = useIndexedDB();\n    const [newContactName, setNewContactName] = useState('');\n    const [newContactPic, setNewContactPic] = useState('');\n    const [showForm, setShowForm] = useState(false);\n    const [showOptions, setShowOptions] = useState(false);\n    const [showArchived, setShowArchived] = useState(false);\n    const [archivedContacts, setArchivedContacts] = useState([]);\n    const [theme, setTheme] = useState('light');\n    const [favorites, setFavorites] = useState([]);\n    const [searchQuery, setSearchQuery] = useState(''); // State for search query\n\n    // Fetch contacts from IndexedDB or static data\n    useEffect(() => {\n        const fetchContacts = async () => {\n            try {\n                const storedContacts = await getFromDB('contacts');\n                if (storedContacts.length) {\n                    dispatchContacts({ type: 'SET_CONTACTS', payload: storedContacts });\n                } else {\n                    const contactData = [\n                        { id: 1, name: 'Garvita', pic: '' },\n                        { id: 2, name: 'Heena', pic: '' },\n                        { id: 3, name: 'Sayani', pic: '' },\n                        // Add more contacts here\n                    ];\n                    contactData.forEach((contact) => addToDB('contacts', contact));\n                    dispatchContacts({ type: 'SET_CONTACTS', payload: contactData });\n                }\n            } catch (error) {\n                console.error('Error fetching contacts:', error);\n            }\n        };\n\n        fetchContacts();\n    }, [dispatchContacts, getFromDB, addToDB]);\n\n    // Add a new contact\n    const handleAddContact = async () => {\n        if (newContactName.trim()) {\n            const newContact = {\n                id: Date.now(),\n                name: newContactName,\n                pic: newContactPic || '',\n            };\n            await addToDB('contacts', newContact);\n            dispatchContacts({ type: 'ADD_CONTACT', payload: newContact });\n            setNewContactName('');\n            setNewContactPic('');\n            setShowForm(false); // Close the form\n        }\n    };\n\n    // Delete a contact\n    const handleDeleteContact = async (id) => {\n        await deleteFromDB('contacts', id);\n        dispatchContacts({ type: 'DELETE_CONTACT', payload: id });\n    };\n\n    // Archive contact\n    const handleArchiveContact = (contact) => {\n        setArchivedContacts((prev) => [...prev, contact]);\n        handleDeleteContact(contact.id); // Remove from the active contacts list\n    };\n\n    // Show contact options\n    const handleProfileClick = (contact) => {\n        setSelectedContact(contact.id);\n        setShowOptions(true);\n    };\n\n    // Block contact (add your own logic)\n    const handleBlockContact = (id) => {\n        console.log(`Contact with ID ${id} is blocked.`);\n        setShowOptions(false);\n    };\n\n    // Edit contact (opens form to edit name)\n    const handleEditContact = (id) => {\n        const contactToEdit = contacts.find((contact) => contact.id === id);\n        if (contactToEdit) {\n            setNewContactName(contactToEdit.name);\n            setShowForm(true); // Show the form to edit contact\n        }\n        setShowOptions(false);\n    };\n\n    // Update the contact's name\n    const handleUpdateContact = async () => {\n        if (newContactName.trim() && selectedContact) {\n            const updatedContact = {\n                id: selectedContact,\n                name: newContactName,\n                pic: newContactPic || '',\n            };\n            await updateInDB('contacts', updatedContact);\n            dispatchContacts({ type: 'UPDATE_CONTACT', payload: updatedContact });\n            setNewContactName('');\n            setNewContactPic('');\n            setShowForm(false);\n        }\n    };\n\n    // Add to favorites\n    const handleAddToFavorites = (id) => {\n        const contactToAdd = contacts.find((contact) => contact.id === id);\n        if (contactToAdd) {\n            setFavorites((prev) => [...prev, contactToAdd]);\n        }\n        setShowOptions(false);\n    };\n\n    // Toggle Theme (Emoji Click)\n    const toggleTheme = () => {\n        const newTheme = theme === 'light' ? 'dark' : 'light';\n        setTheme(newTheme);\n        document.body.className = newTheme;\n    };\n\n    // Filter contacts based on search query\n    const filteredContacts = contacts.filter(contact =>\n        contact.name.toLowerCase().includes(searchQuery.toLowerCase())\n    );\n\n    return (\n        <div className={`contact-list ${theme}`}>\n            {/* Search Bar */}\n            \n\n            {/* Archived Contacts Section */}\n            {showArchived && (\n                <div className=\"archived-contacts\">\n                    <h3>Archived Contacts</h3>\n                    <div id=\"archivedItems\">\n                        {archivedContacts.map((contact) => (\n                            <div key={contact.id} className=\"contact-item\">\n                                <div className=\"contact-pic-container\">\n                                    {contact.pic ? (\n                                        <img src={contact.pic} alt={contact.name} className=\"contact-pic\" />\n                                    ) : (\n                                        <div className=\"contact-initial\">\n                                            {contact.name[0].toUpperCase()}\n                                        </div>\n                                    )}\n                                </div>\n                                <div className=\"contact-info\">\n                                    <span className=\"contact-name\">{contact.name}</span>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            )}\n\n            {/* Contact List Header */}\n            <div className=\"contact-list-header\">\n                <h2>\n                    Chats\n                    \n                </h2>\n                <span className=\"add-contact-icon\" onClick={() => setShowForm(!showForm)}>\n                    ➕\n                </span>\n                <span className=\"theme-toggle\" onClick={toggleTheme}>\n                    🌗\n                </span>\n                \n                \n            </div>\n            <div>\n                <input\n                    type=\"text\"\n                    placeholder=\"Search contacts\"\n                    value={searchQuery}\n                    onChange={(e) => setSearchQuery(e.target.value)}\n                    className=\"search-bar\"\n                />\n            </div>\n\n            {/* Add/Edit Contact Form */}\n            {showForm && (\n                <div className=\"add-contact-form\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Enter contact name\"\n                        value={newContactName}\n                        onChange={(e) => setNewContactName(e.target.value)}\n                    />\n                    <input\n                        type=\"text\"\n                        placeholder=\"Enter profile picture URL (optional)\"\n                        value={newContactPic}\n                        onChange={(e) => setNewContactPic(e.target.value)}\n                    />\n                    {selectedContact ? (\n                        <button onClick={handleUpdateContact}>Update Contact</button>\n                    ) : (\n                        <button onClick={handleAddContact}>Add Contact</button>\n                        \n                    )}\n                </div>\n            )}\n\n            {/* Contact List */}\n            <div className=\"contact-list-container\">\n                {filteredContacts.map((contact) => (\n                    <div\n                        key={contact.id}\n                        className={`contact-item ${selectedContact === contact.id ? 'selected' : ''}`}\n                        onClick={() => setSelectedContact(contact.id)}\n                    >\n                        <div className=\"contact-pic-container\" onClick={() => handleProfileClick(contact)}>\n                            {contact.pic ? (\n                                <img src={contact.pic} alt={contact.name} className=\"contact-pic\" />\n                            ) : (\n                                <div className=\"contact-initial\">\n                                    {contact.name[0].toUpperCase()}\n                                </div>\n                            )}\n                        </div>\n                        <div className=\"contact-info\">\n                            <span className=\"contact-name\">{contact.name}</span>\n                        </div>\n                        {favorites.some((fav) => fav.id === contact.id) && (\n                            <span className=\"favorite-icon\">❤️</span>\n                        )}\n                        <button onClick={() => handleArchiveContact(contact)}>Archive</button>\n                        <button onClick={() => handleAddToFavorites(selectedContact)}>Pin</button>\n                    </div>\n                ))}\n            </div>\n\n            {/* Contact Options Menu */}\n            {showOptions && selectedContact && (\n                <div className=\"contact-options\">\n                    \n                    <button onClick={() => handleEditContact(selectedContact)}>Edit Contact</button>\n                    \n                    <button onClick={() => handleDeleteContact(selectedContact)}>Delete</button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default ContactList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,SAASC,aAAa,QAAQ,0BAA0B;AACxD,OAAOC,YAAY,MAAM,uBAAuB;AAChD,OAAO,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM;IAAEC,QAAQ;IAAEC,gBAAgB;IAAEC,eAAe;IAAEC;EAAmB,CAAC,GAAGZ,UAAU,CAACG,aAAa,CAAC;EACrG,MAAM;IAAEU,SAAS;IAAEC,OAAO;IAAEC,YAAY;IAAEC;EAAW,CAAC,GAAGZ,YAAY,CAAC,CAAC;EACvE,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACiB,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACmB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACqB,WAAW,EAAEC,cAAc,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACuB,YAAY,EAAEC,eAAe,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACyB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAAC2B,KAAK,EAAEC,QAAQ,CAAC,GAAG5B,QAAQ,CAAC,OAAO,CAAC;EAC3C,MAAM,CAAC6B,SAAS,EAAEC,YAAY,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAC+B,WAAW,EAAEC,cAAc,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEpD;EACAD,SAAS,CAAC,MAAM;IACZ,MAAMkC,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACA,MAAMC,cAAc,GAAG,MAAMvB,SAAS,CAAC,UAAU,CAAC;QAClD,IAAIuB,cAAc,CAACC,MAAM,EAAE;UACvB3B,gBAAgB,CAAC;YAAE4B,IAAI,EAAE,cAAc;YAAEC,OAAO,EAAEH;UAAe,CAAC,CAAC;QACvE,CAAC,MAAM;UACH,MAAMI,WAAW,GAAG,CAChB;YAAEC,EAAE,EAAE,CAAC;YAAEC,IAAI,EAAE,SAAS;YAAEC,GAAG,EAAE;UAAG,CAAC,EACnC;YAAEF,EAAE,EAAE,CAAC;YAAEC,IAAI,EAAE,OAAO;YAAEC,GAAG,EAAE;UAAG,CAAC,EACjC;YAAEF,EAAE,EAAE,CAAC;YAAEC,IAAI,EAAE,QAAQ;YAAEC,GAAG,EAAE;UAAG;UACjC;UAAA,CACH;UACDH,WAAW,CAACI,OAAO,CAAEC,OAAO,IAAK/B,OAAO,CAAC,UAAU,EAAE+B,OAAO,CAAC,CAAC;UAC9DnC,gBAAgB,CAAC;YAAE4B,IAAI,EAAE,cAAc;YAAEC,OAAO,EAAEC;UAAY,CAAC,CAAC;QACpE;MACJ,CAAC,CAAC,OAAOM,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MACpD;IACJ,CAAC;IAEDX,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,CAACzB,gBAAgB,EAAEG,SAAS,EAAEC,OAAO,CAAC,CAAC;;EAE1C;EACA,MAAMkC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI/B,cAAc,CAACgC,IAAI,CAAC,CAAC,EAAE;MACvB,MAAMC,UAAU,GAAG;QACfT,EAAE,EAAEU,IAAI,CAACC,GAAG,CAAC,CAAC;QACdV,IAAI,EAAEzB,cAAc;QACpB0B,GAAG,EAAExB,aAAa,IAAI;MAC1B,CAAC;MACD,MAAML,OAAO,CAAC,UAAU,EAAEoC,UAAU,CAAC;MACrCxC,gBAAgB,CAAC;QAAE4B,IAAI,EAAE,aAAa;QAAEC,OAAO,EAAEW;MAAW,CAAC,CAAC;MAC9DhC,iBAAiB,CAAC,EAAE,CAAC;MACrBE,gBAAgB,CAAC,EAAE,CAAC;MACpBE,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;IACxB;EACJ,CAAC;;EAED;EACA,MAAM+B,mBAAmB,GAAG,MAAOZ,EAAE,IAAK;IACtC,MAAM1B,YAAY,CAAC,UAAU,EAAE0B,EAAE,CAAC;IAClC/B,gBAAgB,CAAC;MAAE4B,IAAI,EAAE,gBAAgB;MAAEC,OAAO,EAAEE;IAAG,CAAC,CAAC;EAC7D,CAAC;;EAED;EACA,MAAMa,oBAAoB,GAAIT,OAAO,IAAK;IACtCjB,mBAAmB,CAAE2B,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEV,OAAO,CAAC,CAAC;IACjDQ,mBAAmB,CAACR,OAAO,CAACJ,EAAE,CAAC,CAAC,CAAC;EACrC,CAAC;;EAED;EACA,MAAMe,kBAAkB,GAAIX,OAAO,IAAK;IACpCjC,kBAAkB,CAACiC,OAAO,CAACJ,EAAE,CAAC;IAC9BjB,cAAc,CAAC,IAAI,CAAC;EACxB,CAAC;;EAED;EACA,MAAMiC,kBAAkB,GAAIhB,EAAE,IAAK;IAC/BM,OAAO,CAACW,GAAG,CAAC,mBAAmBjB,EAAE,cAAc,CAAC;IAChDjB,cAAc,CAAC,KAAK,CAAC;EACzB,CAAC;;EAED;EACA,MAAMmC,iBAAiB,GAAIlB,EAAE,IAAK;IAC9B,MAAMmB,aAAa,GAAGnD,QAAQ,CAACoD,IAAI,CAAEhB,OAAO,IAAKA,OAAO,CAACJ,EAAE,KAAKA,EAAE,CAAC;IACnE,IAAImB,aAAa,EAAE;MACf1C,iBAAiB,CAAC0C,aAAa,CAAClB,IAAI,CAAC;MACrCpB,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;IACvB;IACAE,cAAc,CAAC,KAAK,CAAC;EACzB,CAAC;;EAED;EACA,MAAMsC,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI7C,cAAc,CAACgC,IAAI,CAAC,CAAC,IAAItC,eAAe,EAAE;MAC1C,MAAMoD,cAAc,GAAG;QACnBtB,EAAE,EAAE9B,eAAe;QACnB+B,IAAI,EAAEzB,cAAc;QACpB0B,GAAG,EAAExB,aAAa,IAAI;MAC1B,CAAC;MACD,MAAMH,UAAU,CAAC,UAAU,EAAE+C,cAAc,CAAC;MAC5CrD,gBAAgB,CAAC;QAAE4B,IAAI,EAAE,gBAAgB;QAAEC,OAAO,EAAEwB;MAAe,CAAC,CAAC;MACrE7C,iBAAiB,CAAC,EAAE,CAAC;MACrBE,gBAAgB,CAAC,EAAE,CAAC;MACpBE,WAAW,CAAC,KAAK,CAAC;IACtB;EACJ,CAAC;;EAED;EACA,MAAM0C,oBAAoB,GAAIvB,EAAE,IAAK;IACjC,MAAMwB,YAAY,GAAGxD,QAAQ,CAACoD,IAAI,CAAEhB,OAAO,IAAKA,OAAO,CAACJ,EAAE,KAAKA,EAAE,CAAC;IAClE,IAAIwB,YAAY,EAAE;MACdjC,YAAY,CAAEuB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEU,YAAY,CAAC,CAAC;IACnD;IACAzC,cAAc,CAAC,KAAK,CAAC;EACzB,CAAC;;EAED;EACA,MAAM0C,WAAW,GAAGA,CAAA,KAAM;IACtB,MAAMC,QAAQ,GAAGtC,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO;IACrDC,QAAQ,CAACqC,QAAQ,CAAC;IAClBC,QAAQ,CAACC,IAAI,CAACC,SAAS,GAAGH,QAAQ;EACtC,CAAC;;EAED;EACA,MAAMI,gBAAgB,GAAG9D,QAAQ,CAAC+D,MAAM,CAAC3B,OAAO,IAC5CA,OAAO,CAACH,IAAI,CAAC+B,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACzC,WAAW,CAACwC,WAAW,CAAC,CAAC,CACjE,CAAC;EAED,oBACInE,OAAA;IAAKgE,SAAS,EAAE,gBAAgBzC,KAAK,EAAG;IAAA8C,QAAA,GAKnClD,YAAY,iBACTnB,OAAA;MAAKgE,SAAS,EAAC,mBAAmB;MAAAK,QAAA,gBAC9BrE,OAAA;QAAAqE,QAAA,EAAI;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1BzE,OAAA;QAAKmC,EAAE,EAAC,eAAe;QAAAkC,QAAA,EAClBhD,gBAAgB,CAACqD,GAAG,CAAEnC,OAAO,iBAC1BvC,OAAA;UAAsBgE,SAAS,EAAC,cAAc;UAAAK,QAAA,gBAC1CrE,OAAA;YAAKgE,SAAS,EAAC,uBAAuB;YAAAK,QAAA,EACjC9B,OAAO,CAACF,GAAG,gBACRrC,OAAA;cAAK2E,GAAG,EAAEpC,OAAO,CAACF,GAAI;cAACuC,GAAG,EAAErC,OAAO,CAACH,IAAK;cAAC4B,SAAS,EAAC;YAAa;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,gBAEpEzE,OAAA;cAAKgE,SAAS,EAAC,iBAAiB;cAAAK,QAAA,EAC3B9B,OAAO,CAACH,IAAI,CAAC,CAAC,CAAC,CAACyC,WAAW,CAAC;YAAC;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7B;UACR;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACNzE,OAAA;YAAKgE,SAAS,EAAC,cAAc;YAAAK,QAAA,eACzBrE,OAAA;cAAMgE,SAAS,EAAC,cAAc;cAAAK,QAAA,EAAE9B,OAAO,CAACH;YAAI;cAAAkC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnD,CAAC;QAAA,GAZAlC,OAAO,CAACJ,EAAE;UAAAmC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAaf,CACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACR,eAGDzE,OAAA;MAAKgE,SAAS,EAAC,qBAAqB;MAAAK,QAAA,gBAChCrE,OAAA;QAAAqE,QAAA,EAAI;MAGJ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACLzE,OAAA;QAAMgE,SAAS,EAAC,kBAAkB;QAACc,OAAO,EAAEA,CAAA,KAAM9D,WAAW,CAAC,CAACD,QAAQ,CAAE;QAAAsD,QAAA,EAAC;MAE1E;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACPzE,OAAA;QAAMgE,SAAS,EAAC,cAAc;QAACc,OAAO,EAAElB,WAAY;QAAAS,QAAA,EAAC;MAErD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGN,CAAC,eACNzE,OAAA;MAAAqE,QAAA,eACIrE,OAAA;QACIgC,IAAI,EAAC,MAAM;QACX+C,WAAW,EAAC,iBAAiB;QAC7BC,KAAK,EAAErD,WAAY;QACnBsD,QAAQ,EAAGC,CAAC,IAAKtD,cAAc,CAACsD,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAChDhB,SAAS,EAAC;MAAY;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,EAGL1D,QAAQ,iBACLf,OAAA;MAAKgE,SAAS,EAAC,kBAAkB;MAAAK,QAAA,gBAC7BrE,OAAA;QACIgC,IAAI,EAAC,MAAM;QACX+C,WAAW,EAAC,oBAAoB;QAChCC,KAAK,EAAErE,cAAe;QACtBsE,QAAQ,EAAGC,CAAC,IAAKtE,iBAAiB,CAACsE,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtD,CAAC,eACFzE,OAAA;QACIgC,IAAI,EAAC,MAAM;QACX+C,WAAW,EAAC,sCAAsC;QAClDC,KAAK,EAAEnE,aAAc;QACrBoE,QAAQ,EAAGC,CAAC,IAAKpE,gBAAgB,CAACoE,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD,CAAC,EACDpE,eAAe,gBACZL,OAAA;QAAQ8E,OAAO,EAAEtB,mBAAoB;QAAAa,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,gBAE7DzE,OAAA;QAAQ8E,OAAO,EAAEpC,gBAAiB;QAAA2B,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAEzD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACR,eAGDzE,OAAA;MAAKgE,SAAS,EAAC,wBAAwB;MAAAK,QAAA,EAClCJ,gBAAgB,CAACS,GAAG,CAAEnC,OAAO,iBAC1BvC,OAAA;QAEIgE,SAAS,EAAE,gBAAgB3D,eAAe,KAAKkC,OAAO,CAACJ,EAAE,GAAG,UAAU,GAAG,EAAE,EAAG;QAC9E2C,OAAO,EAAEA,CAAA,KAAMxE,kBAAkB,CAACiC,OAAO,CAACJ,EAAE,CAAE;QAAAkC,QAAA,gBAE9CrE,OAAA;UAAKgE,SAAS,EAAC,uBAAuB;UAACc,OAAO,EAAEA,CAAA,KAAM5B,kBAAkB,CAACX,OAAO,CAAE;UAAA8B,QAAA,EAC7E9B,OAAO,CAACF,GAAG,gBACRrC,OAAA;YAAK2E,GAAG,EAAEpC,OAAO,CAACF,GAAI;YAACuC,GAAG,EAAErC,OAAO,CAACH,IAAK;YAAC4B,SAAS,EAAC;UAAa;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAEpEzE,OAAA;YAAKgE,SAAS,EAAC,iBAAiB;YAAAK,QAAA,EAC3B9B,OAAO,CAACH,IAAI,CAAC,CAAC,CAAC,CAACyC,WAAW,CAAC;UAAC;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B;QACR;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACNzE,OAAA;UAAKgE,SAAS,EAAC,cAAc;UAAAK,QAAA,eACzBrE,OAAA;YAAMgE,SAAS,EAAC,cAAc;YAAAK,QAAA,EAAE9B,OAAO,CAACH;UAAI;YAAAkC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnD,CAAC,EACLhD,SAAS,CAAC2D,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAAClD,EAAE,KAAKI,OAAO,CAACJ,EAAE,CAAC,iBAC3CnC,OAAA;UAAMgE,SAAS,EAAC,eAAe;UAAAK,QAAA,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAC3C,eACDzE,OAAA;UAAQ8E,OAAO,EAAEA,CAAA,KAAM9B,oBAAoB,CAACT,OAAO,CAAE;UAAA8B,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACtEzE,OAAA;UAAQ8E,OAAO,EAAEA,CAAA,KAAMpB,oBAAoB,CAACrD,eAAe,CAAE;UAAAgE,QAAA,EAAC;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GApBrElC,OAAO,CAACJ,EAAE;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAqBd,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,EAGLxD,WAAW,IAAIZ,eAAe,iBAC3BL,OAAA;MAAKgE,SAAS,EAAC,iBAAiB;MAAAK,QAAA,gBAE5BrE,OAAA;QAAQ8E,OAAO,EAAEA,CAAA,KAAMzB,iBAAiB,CAAChD,eAAe,CAAE;QAAAgE,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAEhFzE,OAAA;QAAQ8E,OAAO,EAAEA,CAAA,KAAM/B,mBAAmB,CAAC1C,eAAe,CAAE;QAAAgE,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3E,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACvE,EAAA,CApPID,WAAW;EAAA,QAE4CH,YAAY;AAAA;AAAAwF,EAAA,GAFnErF,WAAW;AAsPjB,eAAeA,WAAW;AAAC,IAAAqF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}