{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\chatsphere\\\\src\\\\components\\\\ContactList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { GlobalContext } from '../context/GlobalContext';\nimport useIndexedDB from '../hooks/useIndexedDB';\nimport '../styles/contactList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactList = () => {\n  _s();\n  const {\n    contacts,\n    dispatchContacts\n  } = useContext(GlobalContext);\n  const {\n    getFromDB,\n    addToDB,\n    deleteFromDB\n  } = useIndexedDB();\n  const [newContactName, setNewContactName] = useState('');\n  const [newContactPic, setNewContactPic] = useState('');\n  const [selectedContact, setSelectedContact] = useState(null);\n  const [theme, setTheme] = useState('light'); // Default theme\n\n  // Fetch contacts from IndexedDB or static data\n  useEffect(() => {\n    const fetchContacts = async () => {\n      try {\n        const storedContacts = await getFromDB('contacts');\n        if (storedContacts.length) {\n          dispatchContacts({\n            type: 'SET_CONTACTS',\n            payload: storedContacts\n          });\n        } else {\n          const contactData = [{\n            id: 1,\n            name: 'Alice',\n            pic: ''\n          }, {\n            id: 2,\n            name: 'Bob',\n            pic: ''\n          }];\n          contactData.forEach(contact => addToDB('contacts', contact));\n          dispatchContacts({\n            type: 'SET_CONTACTS',\n            payload: contactData\n          });\n        }\n      } catch (error) {\n        console.error('Error fetching contacts:', error);\n      }\n    };\n    fetchContacts();\n  }, [dispatchContacts, getFromDB, addToDB]);\n\n  // Add a new contact\n  const handleAddContact = async () => {\n    if (newContactName.trim()) {\n      const newContact = {\n        id: Date.now(),\n        name: newContactName,\n        pic: newContactPic || '' // Optional profile picture\n      };\n      await addToDB('contacts', newContact);\n      dispatchContacts({\n        type: 'ADD_CONTACT',\n        payload: newContact\n      });\n      setNewContactName('');\n      setNewContactPic('');\n    }\n  };\n\n  // Delete a contact\n  const handleDeleteContact = async id => {\n    await deleteFromDB('contacts', id);\n    dispatchContacts({\n      type: 'DELETE_CONTACT',\n      payload: id\n    });\n  };\n\n  // Block a contact (placeholder logic)\n  const handleBlockContact = id => {\n    console.log(`Contact with ID ${id} is blocked.`);\n    // Add blocking logic here if needed\n  };\n\n  // Change the theme\n  const handleThemeChange = selectedTheme => {\n    setTheme(selectedTheme);\n    document.body.className = selectedTheme; // Apply theme to the body\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `contact-list ${theme}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-list-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"theme-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleThemeChange('light'),\n          children: \"Light Theme\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleThemeChange('dark'),\n          children: \"Dark Theme\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-contact\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter contact name\",\n        value: newContactName,\n        onChange: e => setNewContactName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter profile picture URL (optional)\",\n        value: newContactPic,\n        onChange: e => setNewContactPic(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddContact,\n        children: \"Add Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), contacts.map(contact => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `contact-item ${selectedContact === contact.id ? 'selected' : ''}`,\n      onClick: () => setSelectedContact(contact.id),\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: contact.pic || 'https://via.placeholder.com/50' // Default profile pic\n        ,\n        alt: contact.name,\n        className: \"contact-pic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact-info\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"contact-name\",\n          children: contact.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleBlockContact(contact.id),\n          children: \"Block\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteContact(contact.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this)]\n    }, contact.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n_s(ContactList, \"kwLtRCFg/UqZ0BVrNnlz3EuEfyc=\", false, function () {\n  return [useIndexedDB];\n});\n_c = ContactList;\nexport default ContactList;\nvar _c;\n$RefreshReg$(_c, \"ContactList\");","map":{"version":3,"names":["React","useContext","useEffect","useState","GlobalContext","useIndexedDB","jsxDEV","_jsxDEV","ContactList","_s","contacts","dispatchContacts","getFromDB","addToDB","deleteFromDB","newContactName","setNewContactName","newContactPic","setNewContactPic","selectedContact","setSelectedContact","theme","setTheme","fetchContacts","storedContacts","length","type","payload","contactData","id","name","pic","forEach","contact","error","console","handleAddContact","trim","newContact","Date","now","handleDeleteContact","handleBlockContact","log","handleThemeChange","selectedTheme","document","body","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","placeholder","value","onChange","e","target","map","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/User/OneDrive/Desktop/chatsphere/src/components/ContactList.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { GlobalContext } from '../context/GlobalContext';\nimport useIndexedDB from '../hooks/useIndexedDB';\nimport '../styles/contactList.css';\n\nconst ContactList = () => {\n    const { contacts, dispatchContacts } = useContext(GlobalContext);\n    const { getFromDB, addToDB, deleteFromDB } = useIndexedDB();\n    const [newContactName, setNewContactName] = useState('');\n    const [newContactPic, setNewContactPic] = useState('');\n    const [selectedContact, setSelectedContact] = useState(null);\n    const [theme, setTheme] = useState('light'); // Default theme\n\n    // Fetch contacts from IndexedDB or static data\n    useEffect(() => {\n        const fetchContacts = async () => {\n            try {\n                const storedContacts = await getFromDB('contacts');\n                if (storedContacts.length) {\n                    dispatchContacts({ type: 'SET_CONTACTS', payload: storedContacts });\n                } else {\n                    const contactData = [\n                        { id: 1, name: 'Alice', pic: '' },\n                        { id: 2, name: 'Bob', pic: '' },\n                    ];\n                    contactData.forEach((contact) => addToDB('contacts', contact));\n                    dispatchContacts({ type: 'SET_CONTACTS', payload: contactData });\n                }\n            } catch (error) {\n                console.error('Error fetching contacts:', error);\n            }\n        };\n\n        fetchContacts();\n    }, [dispatchContacts, getFromDB, addToDB]);\n\n    // Add a new contact\n    const handleAddContact = async () => {\n        if (newContactName.trim()) {\n            const newContact = {\n                id: Date.now(),\n                name: newContactName,\n                pic: newContactPic || '', // Optional profile picture\n            };\n            await addToDB('contacts', newContact);\n            dispatchContacts({ type: 'ADD_CONTACT', payload: newContact });\n            setNewContactName('');\n            setNewContactPic('');\n        }\n    };\n\n    // Delete a contact\n    const handleDeleteContact = async (id) => {\n        await deleteFromDB('contacts', id);\n        dispatchContacts({ type: 'DELETE_CONTACT', payload: id });\n    };\n\n    // Block a contact (placeholder logic)\n    const handleBlockContact = (id) => {\n        console.log(`Contact with ID ${id} is blocked.`);\n        // Add blocking logic here if needed\n    };\n\n    // Change the theme\n    const handleThemeChange = (selectedTheme) => {\n        setTheme(selectedTheme);\n        document.body.className = selectedTheme; // Apply theme to the body\n    };\n\n    return (\n        <div className={`contact-list ${theme}`}>\n            <div className=\"contact-list-header\">\n                <h2>Contacts</h2>\n                <div className=\"theme-selector\">\n                    <button onClick={() => handleThemeChange('light')}>Light Theme</button>\n                    <button onClick={() => handleThemeChange('dark')}>Dark Theme</button>\n                </div>\n            </div>\n\n            {/* Add New Contact */}\n            <div className=\"add-contact\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Enter contact name\"\n                    value={newContactName}\n                    onChange={(e) => setNewContactName(e.target.value)}\n                />\n                <input\n                    type=\"text\"\n                    placeholder=\"Enter profile picture URL (optional)\"\n                    value={newContactPic}\n                    onChange={(e) => setNewContactPic(e.target.value)}\n                />\n                <button onClick={handleAddContact}>Add Contact</button>\n            </div>\n\n            {/* Contact List */}\n            {contacts.map((contact) => (\n                <div\n                    key={contact.id}\n                    className={`contact-item ${selectedContact === contact.id ? 'selected' : ''}`}\n                    onClick={() => setSelectedContact(contact.id)}\n                >\n                    <img\n                        src={contact.pic || 'https://via.placeholder.com/50'} // Default profile pic\n                        alt={contact.name}\n                        className=\"contact-pic\"\n                    />\n                    <div className=\"contact-info\">\n                        <span className=\"contact-name\">{contact.name}</span>\n                    </div>\n                    <div className=\"contact-actions\">\n                        <button onClick={() => handleBlockContact(contact.id)}>Block</button>\n                        <button onClick={() => handleDeleteContact(contact.id)}>Delete</button>\n                    </div>\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default ContactList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}