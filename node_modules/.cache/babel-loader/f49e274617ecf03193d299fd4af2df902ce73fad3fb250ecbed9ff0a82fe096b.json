{"ast":null,"code":"// components/Message.js\nimport React from'react';import'../styles/chatWindow.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Message=_ref=>{let{message}=_ref;return/*#__PURE__*/_jsxs(\"div\",{className:\"message \".concat(message.sender==='me'?'sent':'received'),children:[/*#__PURE__*/_jsx(\"p\",{style:{whiteSpace:'pre-wrap',wordWrap:'break-word'},children:message.text}),/*#__PURE__*/_jsx(\"span\",{children:message.timestamp})]});};export default Message;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","Message","_ref","message","className","concat","sender","children","style","whiteSpace","wordWrap","text","timestamp"],"sources":["C:/Users/itsme/Downloads/ChatSphere--main/ChatSphere--main/src/components/Message.jsx"],"sourcesContent":["// components/Message.js\nimport React from 'react';\nimport '../styles/chatWindow.css';\n\nconst Message = ({ message }) => {\n    return (\n        <div className={`message ${message.sender === 'me' ? 'sent' : 'received'}`}>\n            {/* Ensure that line breaks and spaces are preserved */}\n            <p style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}>\n                {message.text}\n            </p>\n            <span>{message.timestamp}</span>\n        </div>\n    );\n};\n\nexport default Message;\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,0BAA0B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAElC,KAAM,CAAAC,OAAO,CAAGC,IAAA,EAAiB,IAAhB,CAAEC,OAAQ,CAAC,CAAAD,IAAA,CACxB,mBACIF,KAAA,QAAKI,SAAS,YAAAC,MAAA,CAAaF,OAAO,CAACG,MAAM,GAAK,IAAI,CAAG,MAAM,CAAG,UAAU,CAAG,CAAAC,QAAA,eAEvET,IAAA,MAAGU,KAAK,CAAE,CAAEC,UAAU,CAAE,UAAU,CAAEC,QAAQ,CAAE,YAAa,CAAE,CAAAH,QAAA,CACxDJ,OAAO,CAACQ,IAAI,CACd,CAAC,cACJb,IAAA,SAAAS,QAAA,CAAOJ,OAAO,CAACS,SAAS,CAAO,CAAC,EAC/B,CAAC,CAEd,CAAC,CAED,cAAe,CAAAX,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}