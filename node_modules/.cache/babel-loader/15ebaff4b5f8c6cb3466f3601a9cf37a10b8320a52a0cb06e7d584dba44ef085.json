{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\chatsphere\\\\src\\\\components\\\\ContactList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { GlobalContext } from '../context/GlobalContext';\nimport useIndexedDB from '../hooks/useIndexedDB';\nimport '../styles/contactList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactList = () => {\n  _s();\n  const {\n    contacts,\n    dispatchContacts,\n    selectedContact,\n    setSelectedContact\n  } = useContext(GlobalContext);\n  const {\n    getFromDB,\n    addToDB,\n    deleteFromDB,\n    updateInDB\n  } = useIndexedDB();\n  const [newContactName, setNewContactName] = useState('');\n  const [newContactPic, setNewContactPic] = useState('');\n  const [showForm, setShowForm] = useState(false);\n  const [showOptions, setShowOptions] = useState(false);\n  const [showArchived, setShowArchived] = useState(false);\n  const [archivedContacts, setArchivedContacts] = useState([]);\n  const [theme, setTheme] = useState('light');\n  const [favorites, setFavorites] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(''); // State for search term\n\n  useEffect(() => {\n    const fetchContacts = async () => {\n      try {\n        const storedContacts = await getFromDB('contacts');\n        if (storedContacts.length) {\n          dispatchContacts({\n            type: 'SET_CONTACTS',\n            payload: storedContacts\n          });\n        } else {\n          const contactData = [{\n            id: 1,\n            name: 'Garvita',\n            pic: ''\n          }, {\n            id: 2,\n            name: 'Heena',\n            pic: ''\n          }, {\n            id: 3,\n            name: 'Sayani',\n            pic: ''\n          }];\n          contactData.forEach(contact => addToDB('contacts', contact));\n          dispatchContacts({\n            type: 'SET_CONTACTS',\n            payload: contactData\n          });\n        }\n      } catch (error) {\n        console.error('Error fetching contacts:', error);\n      }\n    };\n    fetchContacts();\n  }, [dispatchContacts, getFromDB, addToDB]);\n\n  // Filtered contacts based on search term\n  const filteredContacts = contacts.filter(contact => contact.name.toLowerCase().includes(searchTerm.toLowerCase()));\n\n  // Add a new contact\n  const handleAddContact = async () => {\n    if (newContactName.trim()) {\n      const newContact = {\n        id: Date.now(),\n        name: newContactName,\n        pic: newContactPic || ''\n      };\n      await addToDB('contacts', newContact);\n      dispatchContacts({\n        type: 'ADD_CONTACT',\n        payload: newContact\n      });\n      setNewContactName('');\n      setNewContactPic('');\n      setShowForm(false);\n    }\n  };\n\n  // Delete a contact\n  const handleDeleteContact = async id => {\n    await deleteFromDB('contacts', id);\n    dispatchContacts({\n      type: 'DELETE_CONTACT',\n      payload: id\n    });\n  };\n\n  // Archive contact\n  const handleArchiveContact = contact => {\n    setArchivedContacts(prev => [...prev, contact]);\n    handleDeleteContact(contact.id);\n  };\n\n  // Show contact options\n  const handleProfileClick = contact => {\n    setSelectedContact(contact.id);\n    setShowOptions(true);\n  };\n\n  // Block contact\n  const handleBlockContact = id => {\n    console.log(`Contact with ID ${id} is blocked.`);\n    setShowOptions(false);\n  };\n\n  // Edit contact\n  const handleEditContact = id => {\n    const contactToEdit = contacts.find(contact => contact.id === id);\n    if (contactToEdit) {\n      setNewContactName(contactToEdit.name);\n      setShowForm(true);\n    }\n    setShowOptions(false);\n  };\n\n  // Update the contact's name\n  const handleUpdateContact = async () => {\n    if (newContactName.trim() && selectedContact) {\n      const updatedContact = {\n        id: selectedContact,\n        name: newContactName,\n        pic: newContactPic || ''\n      };\n      await updateInDB('contacts', updatedContact);\n      dispatchContacts({\n        type: 'UPDATE_CONTACT',\n        payload: updatedContact\n      });\n      setNewContactName('');\n      setNewContactPic('');\n      setShowForm(false);\n    }\n  };\n\n  // Add to favorites\n  const handleAddToFavorites = id => {\n    const contactToAdd = contacts.find(contact => contact.id === id);\n    if (contactToAdd) {\n      setFavorites(prev => [...prev, contactToAdd]);\n    }\n    setShowOptions(false);\n  };\n\n  // Toggle Theme (Emoji Click)\n  const toggleTheme = () => {\n    const newTheme = theme === 'light' ? 'dark' : 'light';\n    setTheme(newTheme);\n    document.body.className = newTheme;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `contact-list ${theme}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search Contacts\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), showArchived && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"archived-contacts\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Archived Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"archivedItems\",\n        children: archivedContacts.map(contact => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contact-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"contact-pic-container\",\n            children: contact.pic ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: contact.pic,\n              alt: contact.name,\n              className: \"contact-pic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"contact-initial\",\n              children: contact.name[0].toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"contact-info\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"contact-name\",\n              children: contact.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 33\n          }, this)]\n        }, contact.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-list-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Contacts\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"add-contact-icon\",\n          onClick: () => setShowForm(!showForm),\n          children: \"\\u2795\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"theme-toggle\",\n          onClick: toggleTheme,\n          children: \"\\uD83C\\uDF17\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"archive-toggle-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowArchived(!showArchived),\n          children: showArchived ? 'Hide Archived' : 'Show Archived'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this), showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-contact-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter contact name\",\n        value: newContactName,\n        onChange: e => setNewContactName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter profile picture URL (optional)\",\n        value: newContactPic,\n        onChange: e => setNewContactPic(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }, this), selectedContact ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdateContact,\n        children: \"Update Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddContact,\n        children: \"Add Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }, this), filteredContacts.map(contact => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `contact-item ${selectedContact === contact.id ? 'selected' : ''}`,\n      onClick: () => setSelectedContact(contact.id),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact-pic-container\",\n        onClick: () => handleProfileClick(contact),\n        children: contact.pic ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: contact.pic,\n          alt: contact.name,\n          className: \"contact-pic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contact-initial\",\n          children: contact.name[0].toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact-info\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"contact-name\",\n          children: contact.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 21\n      }, this), favorites.some(fav => fav.id === contact.id) && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"favorite-icon\",\n        children: \"\\u2764\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 72\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleArchiveContact(contact),\n        children: \"Archive\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 21\n      }, this)]\n    }, contact.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }, this)), showOptions && selectedContact && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-options\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleBlockContact(selectedContact),\n        children: \"Block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleEditContact(selectedContact),\n        children: \"Edit Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAddToFavorites(selectedContact),\n        children: \"Add to Favorites\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDeleteContact(selectedContact),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 9\n  }, this);\n};\n_s(ContactList, \"bLWnka3xlGr4k9CBWpw1SDMcra0=\", false, function () {\n  return [useIndexedDB];\n});\n_c = ContactList;\nexport default ContactList;\nvar _c;\n$RefreshReg$(_c, \"ContactList\");","map":{"version":3,"names":["React","useContext","useEffect","useState","GlobalContext","useIndexedDB","jsxDEV","_jsxDEV","ContactList","_s","contacts","dispatchContacts","selectedContact","setSelectedContact","getFromDB","addToDB","deleteFromDB","updateInDB","newContactName","setNewContactName","newContactPic","setNewContactPic","showForm","setShowForm","showOptions","setShowOptions","showArchived","setShowArchived","archivedContacts","setArchivedContacts","theme","setTheme","favorites","setFavorites","searchTerm","setSearchTerm","fetchContacts","storedContacts","length","type","payload","contactData","id","name","pic","forEach","contact","error","console","filteredContacts","filter","toLowerCase","includes","handleAddContact","trim","newContact","Date","now","handleDeleteContact","handleArchiveContact","prev","handleProfileClick","handleBlockContact","log","handleEditContact","contactToEdit","find","handleUpdateContact","updatedContact","handleAddToFavorites","contactToAdd","toggleTheme","newTheme","document","body","className","children","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","map","src","alt","toUpperCase","onClick","some","fav","_c","$RefreshReg$"],"sources":["C:/Users/User/OneDrive/Desktop/chatsphere/src/components/ContactList.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { GlobalContext } from '../context/GlobalContext';\nimport useIndexedDB from '../hooks/useIndexedDB';\nimport '../styles/contactList.css';\n\nconst ContactList = () => {\n    const {\n        contacts,\n        dispatchContacts,\n        selectedContact,\n        setSelectedContact\n    } = useContext(GlobalContext);\n\n    const {\n        getFromDB,\n        addToDB,\n        deleteFromDB,\n        updateInDB\n    } = useIndexedDB();\n\n    const [newContactName, setNewContactName] = useState('');\n    const [newContactPic, setNewContactPic] = useState('');\n    const [showForm, setShowForm] = useState(false);\n    const [showOptions, setShowOptions] = useState(false);\n    const [showArchived, setShowArchived] = useState(false);\n    const [archivedContacts, setArchivedContacts] = useState([]);\n    const [theme, setTheme] = useState('light');\n    const [favorites, setFavorites] = useState([]);\n    const [searchTerm, setSearchTerm] = useState(''); // State for search term\n\n    useEffect(() => {\n        const fetchContacts = async () => {\n            try {\n                const storedContacts = await getFromDB('contacts');\n                if (storedContacts.length) {\n                    dispatchContacts({ type: 'SET_CONTACTS', payload: storedContacts });\n                } else {\n                    const contactData = [\n                        { id: 1, name: 'Garvita', pic: '' },\n                        { id: 2, name: 'Heena', pic: '' },\n                        { id: 3, name: 'Sayani', pic: '' }\n                    ];\n                    contactData.forEach((contact) => addToDB('contacts', contact));\n                    dispatchContacts({ type: 'SET_CONTACTS', payload: contactData });\n                }\n            } catch (error) {\n                console.error('Error fetching contacts:', error);\n            }\n        };\n        fetchContacts();\n    }, [dispatchContacts, getFromDB, addToDB]);\n\n    // Filtered contacts based on search term\n    const filteredContacts = contacts.filter((contact) =>\n        contact.name.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n\n    // Add a new contact\n    const handleAddContact = async () => {\n        if (newContactName.trim()) {\n            const newContact = { id: Date.now(), name: newContactName, pic: newContactPic || '' };\n            await addToDB('contacts', newContact);\n            dispatchContacts({ type: 'ADD_CONTACT', payload: newContact });\n            setNewContactName('');\n            setNewContactPic('');\n            setShowForm(false);\n        }\n    };\n\n    // Delete a contact\n    const handleDeleteContact = async (id) => {\n        await deleteFromDB('contacts', id);\n        dispatchContacts({ type: 'DELETE_CONTACT', payload: id });\n    };\n\n    // Archive contact\n    const handleArchiveContact = (contact) => {\n        setArchivedContacts((prev) => [...prev, contact]);\n        handleDeleteContact(contact.id);\n    };\n\n    // Show contact options\n    const handleProfileClick = (contact) => {\n        setSelectedContact(contact.id);\n        setShowOptions(true);\n    };\n\n    // Block contact\n    const handleBlockContact = (id) => {\n        console.log(`Contact with ID ${id} is blocked.`);\n        setShowOptions(false);\n    };\n\n    // Edit contact\n    const handleEditContact = (id) => {\n        const contactToEdit = contacts.find((contact) => contact.id === id);\n        if (contactToEdit) {\n            setNewContactName(contactToEdit.name);\n            setShowForm(true);\n        }\n        setShowOptions(false);\n    };\n\n    // Update the contact's name\n    const handleUpdateContact = async () => {\n        if (newContactName.trim() && selectedContact) {\n            const updatedContact = { id: selectedContact, name: newContactName, pic: newContactPic || '' };\n            await updateInDB('contacts', updatedContact);\n            dispatchContacts({ type: 'UPDATE_CONTACT', payload: updatedContact });\n            setNewContactName('');\n            setNewContactPic('');\n            setShowForm(false);\n        }\n    };\n\n    // Add to favorites\n    const handleAddToFavorites = (id) => {\n        const contactToAdd = contacts.find((contact) => contact.id === id);\n        if (contactToAdd) {\n            setFavorites((prev) => [...prev, contactToAdd]);\n        }\n        setShowOptions(false);\n    };\n\n    // Toggle Theme (Emoji Click)\n    const toggleTheme = () => {\n        const newTheme = theme === 'light' ? 'dark' : 'light';\n        setTheme(newTheme);\n        document.body.className = newTheme;\n    };\n\n    return (\n        <div className={`contact-list ${theme}`}>\n            {/* Search Bar */}\n            <div className=\"search-bar\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Search Contacts\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                />\n            </div>\n\n            {/* Archived Contacts Section */}\n            {showArchived && (\n                <div className=\"archived-contacts\">\n                    <h3>Archived Contacts</h3>\n                    <div id=\"archivedItems\">\n                        {archivedContacts.map((contact) => (\n                            <div key={contact.id} className=\"contact-item\">\n                                <div className=\"contact-pic-container\">\n                                    {contact.pic ? (\n                                        <img\n                                            src={contact.pic}\n                                            alt={contact.name}\n                                            className=\"contact-pic\"\n                                        />\n                                    ) : (\n                                        <div className=\"contact-initial\">{contact.name[0].toUpperCase()}</div>\n                                    )}\n                                </div>\n                                <div className=\"contact-info\">\n                                    <span className=\"contact-name\">{contact.name}</span>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            )}\n\n            {/* Contact List Header */}\n            <div className=\"contact-list-header\">\n                <h2>\n                    Contacts\n                    <span className=\"add-contact-icon\" onClick={() => setShowForm(!showForm)}>\n                        ➕\n                    </span>\n                    <span className=\"theme-toggle\" onClick={toggleTheme}>\n                        🌗\n                    </span>\n                </h2>\n                <div className=\"archive-toggle-container\">\n                    <button onClick={() => setShowArchived(!showArchived)}>\n                        {showArchived ? 'Hide Archived' : 'Show Archived'}\n                    </button>\n                </div>\n            </div>\n\n\n            {/* Add/Edit Contact Form */}\n            {showForm && (\n                <div className=\"add-contact-form\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Enter contact name\"\n                        value={newContactName}\n                        onChange={(e) => setNewContactName(e.target.value)}\n                    />\n                    <input\n                        type=\"text\"\n                        placeholder=\"Enter profile picture URL (optional)\"\n                        value={newContactPic}\n                        onChange={(e) => setNewContactPic(e.target.value)}\n                    />\n                    {selectedContact ? (\n                        <button onClick={handleUpdateContact}>Update Contact</button>\n                    ) : (\n                        <button onClick={handleAddContact}>Add Contact</button>\n                    )}\n                </div>\n            )}\n\n            {/* Contact List */}\n            {filteredContacts.map((contact) => (\n                <div\n                    key={contact.id}\n                    className={`contact-item ${selectedContact === contact.id ? 'selected' : ''}`}\n                    onClick={() => setSelectedContact(contact.id)}\n                >\n                    <div className=\"contact-pic-container\" onClick={() => handleProfileClick(contact)}>\n                        {contact.pic ? (\n                            <img\n                                src={contact.pic}\n                                alt={contact.name}\n                                className=\"contact-pic\"\n                            />\n                        ) : (\n                            <div className=\"contact-initial\">{contact.name[0].toUpperCase()}</div>\n                        )}\n                    </div>\n\n                    <div className=\"contact-info\">\n                        <span className=\"contact-name\">{contact.name}</span>\n                    </div>\n                    {favorites.some((fav) => fav.id === contact.id) && <span className=\"favorite-icon\">❤️</span>}\n                    <button onClick={() => handleArchiveContact(contact)}>Archive</button>\n                </div>\n            ))}\n\n            {/* Contact Options Menu */}\n            {showOptions && selectedContact && (\n                <div className=\"contact-options\">\n                    <button onClick={() => handleBlockContact(selectedContact)}>Block</button>\n                    <button onClick={() => handleEditContact(selectedContact)}>Edit Contact</button>\n                    <button onClick={() => handleAddToFavorites(selectedContact)}>Add to Favorites</button>\n                    <button onClick={() => handleDeleteContact(selectedContact)}>Delete</button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default ContactList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}