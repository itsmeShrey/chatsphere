{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\chatsphere\\\\src\\\\components\\\\MessageInput.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport { GlobalContext } from '../context/GlobalContext';\nimport useIndexedDB from '../hooks/useIndexedDB';\nimport '../styles/messageInput.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emojis = ['😀', '😃', '😄', '😁', '😆', '😅', '😂', '🤣', '😊', '😇', '🙂', '🙃', '😉', '😌', '😍', '🥰', '😘', '😗', '😙', '😚', '😋', '😜', '🤪', '😝', '🤑', '🤗', '🤔', '🤭', '🤫', '🤥', '😶', '😐', '😑', '😏', '😒', '🙄', '😬', '🤥', '😪', '😴', '😷', '🤒', '🤕', '🤢', '🤮', '🤧', '🥵', '🥶', '😵', '🤯'];\nconst MessageInput = () => {\n  _s();\n  const [input, setInput] = useState('');\n  const [media, setMedia] = useState(null);\n  const [showOptions, setShowOptions] = useState(false); // Toggle attachment options\n  const [showEmojis, setShowEmojis] = useState(false); // Toggle emoji picker\n  const {\n    dispatchMessages,\n    selectedContact\n  } = useContext(GlobalContext);\n  const {\n    addToDB\n  } = useIndexedDB();\n  const handleSend = async () => {\n    if (!selectedContact || !input && !media) return;\n    const newMessage = {\n      id: Date.now(),\n      text: input,\n      media,\n      sender: 'me',\n      timestamp: new Date().toLocaleTimeString(),\n      contactId: selectedContact\n    };\n    try {\n      await addToDB('messages', newMessage);\n      dispatchMessages({\n        type: 'ADD_MESSAGE',\n        payload: newMessage\n      });\n      setInput('');\n      setMedia(null);\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    if (file) {\n      setMedia(URL.createObjectURL(file));\n    }\n  };\n  const handleEmojiClick = emoji => {\n    setInput(prev => prev + emoji);\n    setShowEmojis(false); // Close the emoji picker after selection\n  };\n  const handleContactShare = () => {\n    const contactInfo = {\n      name: 'John Doe',\n      phone: '123-456-7890'\n    };\n    const newMessage = {\n      id: Date.now(),\n      text: `Contact shared: ${contactInfo.name} - ${contactInfo.phone}`,\n      sender: 'me',\n      timestamp: new Date().toLocaleTimeString(),\n      contactId: selectedContact\n    };\n    try {\n      addToDB('messages', newMessage);\n      dispatchMessages({\n        type: 'ADD_MESSAGE',\n        payload: newMessage\n      });\n    } catch (error) {\n      console.error('Error sharing contact:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-input\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: e => setInput(e.target.value),\n      placeholder: \"Type a message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowOptions(prev => !prev),\n      children: \"\\uD83D\\uDCCE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), \" \", showOptions && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"attachment-options\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*,video/*\",\n        onChange: handleFileChange,\n        style: {\n          display: 'none'\n        },\n        id: \"media-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"media-input\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"\\uD83D\\uDCF7 Image/Video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowEmojis(prev => !prev),\n        children: \"\\uD83D\\uDE0A Emojis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleContactShare,\n        children: \"\\uD83D\\uDCC7 Share Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }, this), showEmojis && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"emoji-picker\",\n      children: emojis.map(emoji => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleEmojiClick(emoji),\n        style: {\n          fontSize: '20px',\n          margin: '5px'\n        },\n        children: emoji\n      }, emoji, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSend,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n_s(MessageInput, \"tDFmTBL/K12duxKxbBqD4SrMONg=\", false, function () {\n  return [useIndexedDB];\n});\n_c = MessageInput;\nexport default MessageInput;\nvar _c;\n$RefreshReg$(_c, \"MessageInput\");","map":{"version":3,"names":["React","useContext","useState","GlobalContext","useIndexedDB","jsxDEV","_jsxDEV","emojis","MessageInput","_s","input","setInput","media","setMedia","showOptions","setShowOptions","showEmojis","setShowEmojis","dispatchMessages","selectedContact","addToDB","handleSend","newMessage","id","Date","now","text","sender","timestamp","toLocaleTimeString","contactId","type","payload","error","console","handleFileChange","event","file","target","files","URL","createObjectURL","handleEmojiClick","emoji","prev","handleContactShare","contactInfo","name","phone","className","children","value","onChange","e","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","accept","style","display","htmlFor","map","fontSize","margin","_c","$RefreshReg$"],"sources":["C:/Users/User/OneDrive/Desktop/chatsphere/src/components/MessageInput.jsx"],"sourcesContent":["import React, { useContext, useState } from 'react';\nimport { GlobalContext } from '../context/GlobalContext';\nimport useIndexedDB from '../hooks/useIndexedDB';\nimport '../styles/messageInput.css';\n\nconst emojis = [\n    '😀', '😃', '😄', '😁', '😆', '😅', '😂', '🤣', '😊', '😇',\n    '🙂', '🙃', '😉', '😌', '😍', '🥰', '😘', '😗', '😙', '😚',\n    '😋', '😜', '🤪', '😝', '🤑', '🤗', '🤔', '🤭', '🤫', '🤥',\n    '😶', '😐', '😑', '😏', '😒', '🙄', '😬', '🤥', '😪', '😴',\n    '😷', '🤒', '🤕', '🤢', '🤮', '🤧', '🥵', '🥶', '😵', '🤯',\n];\n\nconst MessageInput = () => {\n    const [input, setInput] = useState('');\n    const [media, setMedia] = useState(null);\n    const [showOptions, setShowOptions] = useState(false); // Toggle attachment options\n    const [showEmojis, setShowEmojis] = useState(false);  // Toggle emoji picker\n    const { dispatchMessages, selectedContact } = useContext(GlobalContext);\n    const { addToDB } = useIndexedDB();\n\n    const handleSend = async () => {\n        if (!selectedContact || (!input && !media)) return;\n\n        const newMessage = {\n            id: Date.now(),\n            text: input,\n            media,\n            sender: 'me',\n            timestamp: new Date().toLocaleTimeString(),\n            contactId: selectedContact,\n        };\n\n        try {\n            await addToDB('messages', newMessage);\n            dispatchMessages({ type: 'ADD_MESSAGE', payload: newMessage });\n            setInput('');\n            setMedia(null);\n        } catch (error) {\n            console.error('Error sending message:', error);\n        }\n    };\n\n    const handleFileChange = (event) => {\n        const file = event.target.files[0];\n        if (file) {\n            setMedia(URL.createObjectURL(file));\n        }\n    };\n\n    const handleEmojiClick = (emoji) => {\n        setInput((prev) => prev + emoji);\n        setShowEmojis(false); // Close the emoji picker after selection\n    };\n\n    const handleContactShare = () => {\n        const contactInfo = {\n            name: 'John Doe',\n            phone: '123-456-7890',\n        };\n\n        const newMessage = {\n            id: Date.now(),\n            text: `Contact shared: ${contactInfo.name} - ${contactInfo.phone}`,\n            sender: 'me',\n            timestamp: new Date().toLocaleTimeString(),\n            contactId: selectedContact,\n        };\n\n        try {\n            addToDB('messages', newMessage);\n            dispatchMessages({ type: 'ADD_MESSAGE', payload: newMessage });\n        } catch (error) {\n            console.error('Error sharing contact:', error);\n        }\n    };\n\n    return (\n        <div className=\"message-input\">\n            <input\n                type=\"text\"\n                value={input}\n                onChange={(e) => setInput(e.target.value)}\n                placeholder=\"Type a message\"\n            />\n            <button onClick={() => setShowOptions((prev) => !prev)}>📎</button> {/* Toggle options */}\n            {showOptions && (\n                <div className=\"attachment-options\">\n                    <input\n                        type=\"file\"\n                        accept=\"image/*,video/*\"\n                        onChange={handleFileChange}\n                        style={{ display: 'none' }}\n                        id=\"media-input\"\n                    />\n                    <label htmlFor=\"media-input\">\n                        <button>📷 Image/Video</button>\n                    </label>\n                    <button onClick={() => setShowEmojis((prev) => !prev)}>😊 Emojis</button>\n                    <button onClick={handleContactShare}>📇 Share Contact</button>\n                </div>\n            )}\n            {showEmojis && (\n                <div className=\"emoji-picker\">\n                    {emojis.map((emoji) => (\n                        <button\n                            key={emoji}\n                            onClick={() => handleEmojiClick(emoji)}\n                            style={{ fontSize: '20px', margin: '5px' }}\n                        >\n                            {emoji}\n                        </button>\n                    ))}\n                </div>\n            )}\n            <button onClick={handleSend}>Send</button>\n        </div>\n    );\n};\n\nexport default MessageInput;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}