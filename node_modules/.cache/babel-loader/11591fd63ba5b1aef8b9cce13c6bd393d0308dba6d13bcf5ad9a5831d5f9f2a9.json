{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\chatsphere\\\\src\\\\components\\\\ContactList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport { GlobalContext } from '../context/GlobalContext';\nimport '../styles/contactList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactList = () => {\n  _s();\n  const {\n    contacts,\n    setSelectedContact\n  } = useContext(GlobalContext);\n  const [searchQuery, setSearchQuery] = useState('');\n\n  // Filter contacts based on search query\n  const filteredContacts = contacts.filter(contact => contact.name.toLowerCase().includes(searchQuery.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contact-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-list-header\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search contacts...\",\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-list-container\",\n      children: filteredContacts.map(contact => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact-item\",\n        onClick: () => setSelectedContact(contact.id),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contact-pic-container\",\n          children: contact.pic ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: contact.pic,\n            alt: contact.name,\n            className: \"contact-pic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"contact-initial\",\n            children: contact.name[0].toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contact-info\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"contact-name\",\n            children: contact.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this)]\n      }, contact.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n_s(ContactList, \"hzlL3X8V6/rqE9DxdXEh8Ns3Ye8=\");\n_c = ContactList;\nexport default ContactList;\nvar _c;\n$RefreshReg$(_c, \"ContactList\");","map":{"version":3,"names":["React","useContext","useState","GlobalContext","jsxDEV","_jsxDEV","ContactList","_s","contacts","setSelectedContact","searchQuery","setSearchQuery","filteredContacts","filter","contact","name","toLowerCase","includes","className","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","id","pic","src","alt","toUpperCase","_c","$RefreshReg$"],"sources":["C:/Users/User/OneDrive/Desktop/chatsphere/src/components/ContactList.jsx"],"sourcesContent":["import React, { useContext, useState } from 'react';\nimport { GlobalContext } from '../context/GlobalContext';\nimport '../styles/contactList.css';\n\nconst ContactList = () => {\n    const { contacts, setSelectedContact } = useContext(GlobalContext);\n    const [searchQuery, setSearchQuery] = useState('');\n\n    // Filter contacts based on search query\n    const filteredContacts = contacts.filter(contact =>\n        contact.name.toLowerCase().includes(searchQuery.toLowerCase())\n    );\n\n    return (\n        <div className=\"contact-list\">\n            <div className=\"contact-list-header\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Search contacts...\"\n                    value={searchQuery}\n                    onChange={(e) => setSearchQuery(e.target.value)}\n                />\n            </div>\n            <div className=\"contact-list-container\">\n                {filteredContacts.map((contact) => (\n                    <div\n                        key={contact.id}\n                        className=\"contact-item\"\n                        onClick={() => setSelectedContact(contact.id)}\n                    >\n                        <div className=\"contact-pic-container\">\n                            {contact.pic ? (\n                                <img src={contact.pic} alt={contact.name} className=\"contact-pic\" />\n                            ) : (\n                                <div className=\"contact-initial\">\n                                    {contact.name[0].toUpperCase()}\n                                </div>\n                            )}\n                        </div>\n                        <div className=\"contact-info\">\n                            <span className=\"contact-name\">{contact.name}</span>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default ContactList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}