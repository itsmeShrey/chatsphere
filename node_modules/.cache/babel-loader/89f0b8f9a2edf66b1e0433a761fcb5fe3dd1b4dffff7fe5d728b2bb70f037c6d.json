{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\chatsphere\\\\src\\\\components\\\\ContactList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { GlobalContext } from '../context/GlobalContext';\nimport useIndexedDB from '../hooks/useIndexedDB';\nimport '../styles/contactList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactList = () => {\n  _s();\n  const {\n    contacts,\n    dispatchContacts,\n    selectedContact,\n    setSelectedContact\n  } = useContext(GlobalContext);\n  const {\n    getFromDB,\n    addToDB,\n    deleteFromDB,\n    updateInDB\n  } = useIndexedDB();\n  const [newContactName, setNewContactName] = useState('');\n  const [newContactPic, setNewContactPic] = useState('');\n  const [newContactPhone, setNewContactPhone] = useState('');\n  const [showForm, setShowForm] = useState(false);\n  const [showOptions, setShowOptions] = useState(false);\n  const [showArchived, setShowArchived] = useState(false);\n  const [archivedContacts, setArchivedContacts] = useState([]);\n  const [theme, setTheme] = useState('light');\n  const [favorites, setFavorites] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [pinnedContacts, setPinnedContacts] = useState([]);\n\n  // Close options menu when clicking outside\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (!event.target.closest('.contact-options') && !event.target.closest('.contact-pic-container')) {\n        setShowOptions(false);\n      }\n    };\n    document.addEventListener('click', handleClickOutside);\n    return () => document.removeEventListener('click', handleClickOutside);\n  }, []);\n\n  // Fetch contacts from IndexedDB or static data\n  useEffect(() => {\n    const fetchContacts = async () => {\n      try {\n        const storedContacts = await getFromDB('contacts');\n        if (storedContacts.length) {\n          dispatchContacts({\n            type: 'SET_CONTACTS',\n            payload: storedContacts\n          });\n        } else {\n          const contactData = [{\n            id: 1,\n            name: 'Garvita',\n            phone: '1234567890',\n            pic: ''\n          }, {\n            id: 2,\n            name: 'Heena',\n            phone: '9876543210',\n            pic: ''\n          }, {\n            id: 3,\n            name: 'Sayani',\n            phone: '1112223333',\n            pic: ''\n          }, {\n            id: 4,\n            name: 'Aarav',\n            phone: '4445556666',\n            pic: ''\n          }, {\n            id: 5,\n            name: 'Ananya',\n            phone: '7778889999',\n            pic: ''\n          }, {\n            id: 6,\n            name: 'Rohan',\n            phone: '5554443333',\n            pic: ''\n          }, {\n            id: 7,\n            name: 'Priya',\n            phone: '9998887777',\n            pic: ''\n          }, {\n            id: 8,\n            name: 'Sahil',\n            phone: '2223334444',\n            pic: ''\n          }, {\n            id: 9,\n            name: 'Neha',\n            phone: '6667778888',\n            pic: ''\n          }, {\n            id: 10,\n            name: 'Vishal',\n            phone: '3332221111',\n            pic: ''\n          }, {\n            id: 11,\n            name: 'Nisha',\n            phone: '8889990000',\n            pic: ''\n          }, {\n            id: 12,\n            name: 'Ishaan',\n            phone: '1231231234',\n            pic: ''\n          }, {\n            id: 13,\n            name: 'Tanya',\n            phone: '3213214321',\n            pic: ''\n          }, {\n            id: 14,\n            name: 'Aditi',\n            phone: '4443332222',\n            pic: ''\n          }, {\n            id: 15,\n            name: 'Karan',\n            phone: '7776665555',\n            pic: ''\n          }, {\n            id: 16,\n            name: 'Sonia',\n            phone: '2221110000',\n            pic: ''\n          }, {\n            id: 17,\n            name: 'Ravi',\n            phone: '5556667777',\n            pic: ''\n          }, {\n            id: 18,\n            name: 'Meera',\n            phone: '8880009999',\n            pic: ''\n          }, {\n            id: 19,\n            name: 'Arjun',\n            phone: '1112221111',\n            pic: ''\n          }, {\n            id: 20,\n            name: 'Simran',\n            phone: '4445553333',\n            pic: ''\n          }, {\n            id: 21,\n            name: 'Ritika',\n            phone: '3334445555',\n            pic: ''\n          }, {\n            id: 22,\n            name: 'Shivansh',\n            phone: '6665554444',\n            pic: ''\n          }, {\n            id: 23,\n            name: 'Aman',\n            phone: '9998887776',\n            pic: ''\n          }, {\n            id: 24,\n            name: 'Divya',\n            phone: '1233211234',\n            pic: ''\n          }, {\n            id: 25,\n            name: 'Sakshi',\n            phone: '4321432143',\n            pic: ''\n          }, {\n            id: 26,\n            name: 'Harsh',\n            phone: '5553332222',\n            pic: ''\n          }, {\n            id: 27,\n            name: 'Komal',\n            phone: '1110001110',\n            pic: ''\n          }, {\n            id: 28,\n            name: 'Vivek',\n            phone: '7775553333',\n            pic: ''\n          }, {\n            id: 29,\n            name: 'Swati',\n            phone: '4442223333',\n            pic: ''\n          }, {\n            id: 30,\n            name: 'Nikhil',\n            phone: '9991112222',\n            pic: ''\n          }];\n          contactData.forEach(contact => addToDB('contacts', contact));\n          dispatchContacts({\n            type: 'SET_CONTACTS',\n            payload: contactData\n          });\n        }\n      } catch (error) {\n        console.error('Error fetching contacts:', error);\n      }\n    };\n    fetchContacts();\n  }, [dispatchContacts, getFromDB, addToDB]);\n\n  // Add a new contact\n  const handleAddContact = async () => {\n    if (newContactName.trim()) {\n      const newContact = {\n        id: Date.now(),\n        name: newContactName,\n        pic: newContactPic || ''\n      };\n      await addToDB('contacts', newContact);\n      dispatchContacts({\n        type: 'ADD_CONTACT',\n        payload: newContact\n      });\n      setNewContactName('');\n      setNewContactPic('');\n      setNewContactPhone('');\n      setShowForm(false);\n    }\n  };\n\n  // Delete a contact\n  const handleDeleteContact = async id => {\n    await deleteFromDB('contacts', id);\n    dispatchContacts({\n      type: 'DELETE_CONTACT',\n      payload: id\n    });\n  };\n\n  // Archive contact\n  const handleArchiveContact = contact => {\n    setArchivedContacts(prev => [...prev, contact]);\n    handleDeleteContact(contact.id);\n  };\n\n  // Show contact options\n  const handleProfileClick = contact => {\n    setSelectedContact(contact.id);\n    setShowOptions(true);\n  };\n\n  // Edit contact\n  const handleEditContact = id => {\n    const contactToEdit = contacts.find(contact => contact.id === id);\n    if (contactToEdit) {\n      setNewContactName(contactToEdit.name);\n      setNewContactPhone(contactToEdit.phone);\n      setNewContactPic(contactToEdit.pic);\n      setShowForm(true);\n    }\n    setShowOptions(false);\n  };\n  const handlePin = contact => {\n    if (pinnedContacts.includes(contact.id)) {\n      // Unpin the contact\n      setPinnedContacts(pinnedContacts.filter(id => id !== contact.id));\n    } else {\n      // Pin the contact\n      setPinnedContacts([...pinnedContacts, contact.id]);\n    }\n  };\n  const sortedContacts = [...contacts.filter(contact => pinnedContacts.includes(contact.id)), ...contacts.filter(contact => !pinnedContacts.includes(contact.id))];\n\n  // Update the contact's name\n  const handleUpdateContact = async () => {\n    if (newContactName.trim() && selectedContact) {\n      const updatedContact = {\n        id: selectedContact,\n        name: newContactName,\n        phone: newContactPhone,\n        pic: newContactPic || ''\n      };\n      await updateInDB('contacts', updatedContact);\n      dispatchContacts({\n        type: 'UPDATE_CONTACT',\n        payload: updatedContact\n      });\n      setNewContactName('');\n      setNewContactPhone('');\n      setNewContactPic('');\n      setShowForm(false);\n    }\n  };\n\n  // Always create a new contact when clicking the âž• button\n  const handleAddContactClick = () => {\n    setSelectedContact(null);\n    setNewContactName('');\n    setNewContactPic('');\n    setShowForm(true);\n  };\n\n  // Filter contacts based on search query\n  const filteredContactsList = contacts.filter(contact => contact.name.toLowerCase().includes(searchQuery.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `contact-list ${theme}`,\n    children: [showArchived && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"archived-contacts\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Archived Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"archivedItems\",\n        children: archivedContacts.map(contact => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contact-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"contact-pic-container\",\n            children: contact.pic ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: contact.pic,\n              alt: contact.name,\n              className: \"contact-pic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"contact-initial\",\n              children: contact.name[0].toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"contact-info\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"contact-name\",\n              children: contact.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 33\n          }, this)]\n        }, contact.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-list-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Chats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"add-contact-icon\",\n        onClick: handleAddContactClick,\n        children: \"\\u2795\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"theme-toggle\",\n        onClick: () => setTheme(theme === 'light' ? 'dark' : 'light'),\n        children: \"\\uD83C\\uDF17\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search contacts\",\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value),\n        className: \"search-bar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }, this), showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-contact-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter contact name\",\n        value: newContactName,\n        onChange: e => setNewContactName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter phone number\",\n        value: newContactPhone,\n        onChange: e => setNewContactPhone(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter profile picture URL (optional)\",\n        value: newContactPic,\n        onChange: e => setNewContactPic(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 21\n      }, this), selectedContact ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdateContact,\n        children: \"Update Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddContact,\n        children: \"Add Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-list-container\",\n      children: sortedContacts.map(contact => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `contact-item ${selectedContact === contact.id ? 'selected' : ''}`,\n        onClick: () => setSelectedContact(contact.id),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contact-pic-container\",\n          onClick: () => handleProfileClick(contact),\n          children: contact.pic ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: contact.pic,\n            alt: contact.name,\n            className: \"contact-pic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"contact-initial\",\n            children: contact.name[0].toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contact-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"contact-name\",\n            children: contact.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"contact-phone\",\n            children: contact.phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `pin-button ${pinnedContacts.includes(contact.id) ? 'pinned' : ''}`,\n            onClick: e => {\n              e.stopPropagation(); // Prevent triggering onClick of the contact\n              handlePin(contact);\n            },\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              role: \"img\",\n              \"aria-label\": \"pin\",\n              className: \"pin-icon\",\n              children: pinnedContacts.includes(contact.id) ? '        ðŸ’–' : '        ðŸ“Œ'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 25\n        }, this)]\n      }, contact.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }, this), showOptions && selectedContact && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-options\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleEditContact(selectedContact),\n        children: \"Edit Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDeleteContact(selectedContact),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 9\n  }, this);\n};\n_s(ContactList, \"VoWxxWADfMxTQJbxy8ZkofioFYQ=\", false, function () {\n  return [useIndexedDB];\n});\n_c = ContactList;\nexport default ContactList;\nvar _c;\n$RefreshReg$(_c, \"ContactList\");","map":{"version":3,"names":["React","useContext","useEffect","useState","GlobalContext","useIndexedDB","jsxDEV","_jsxDEV","ContactList","_s","contacts","dispatchContacts","selectedContact","setSelectedContact","getFromDB","addToDB","deleteFromDB","updateInDB","newContactName","setNewContactName","newContactPic","setNewContactPic","newContactPhone","setNewContactPhone","showForm","setShowForm","showOptions","setShowOptions","showArchived","setShowArchived","archivedContacts","setArchivedContacts","theme","setTheme","favorites","setFavorites","searchQuery","setSearchQuery","pinnedContacts","setPinnedContacts","handleClickOutside","event","target","closest","document","addEventListener","removeEventListener","fetchContacts","storedContacts","length","type","payload","contactData","id","name","phone","pic","forEach","contact","error","console","handleAddContact","trim","newContact","Date","now","handleDeleteContact","handleArchiveContact","prev","handleProfileClick","handleEditContact","contactToEdit","find","handlePin","includes","filter","sortedContacts","handleUpdateContact","updatedContact","handleAddContactClick","filteredContactsList","toLowerCase","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","src","alt","toUpperCase","onClick","placeholder","value","onChange","e","stopPropagation","role","_c","$RefreshReg$"],"sources":["C:/Users/User/OneDrive/Desktop/chatsphere/src/components/ContactList.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { GlobalContext } from '../context/GlobalContext';\nimport useIndexedDB from '../hooks/useIndexedDB';\nimport '../styles/contactList.css';\n\nconst ContactList = () => {\n    const { contacts, dispatchContacts, selectedContact, setSelectedContact } = useContext(GlobalContext);\n    const { getFromDB, addToDB, deleteFromDB, updateInDB } = useIndexedDB();\n    const [newContactName, setNewContactName] = useState('');\n    const [newContactPic, setNewContactPic] = useState('');\n    const [newContactPhone, setNewContactPhone] = useState('');\n    const [showForm, setShowForm] = useState(false);\n    const [showOptions, setShowOptions] = useState(false);\n    const [showArchived, setShowArchived] = useState(false);\n    const [archivedContacts, setArchivedContacts] = useState([]);\n    const [theme, setTheme] = useState('light');\n    const [favorites, setFavorites] = useState([]);\n    const [searchQuery, setSearchQuery] = useState('');\n\n    const [pinnedContacts, setPinnedContacts] = useState([]);\n\n    // Close options menu when clicking outside\n    useEffect(() => {\n        const handleClickOutside = (event) => {\n            if (!event.target.closest('.contact-options') && !event.target.closest('.contact-pic-container')) {\n                setShowOptions(false);\n            }\n        };\n\n        document.addEventListener('click', handleClickOutside);\n        return () => document.removeEventListener('click', handleClickOutside);\n    }, []);\n\n    // Fetch contacts from IndexedDB or static data\n    useEffect(() => {\n        const fetchContacts = async () => {\n            try {\n                const storedContacts = await getFromDB('contacts');\n                if (storedContacts.length) {\n                    dispatchContacts({ type: 'SET_CONTACTS', payload: storedContacts });\n                } else {\n                    const contactData = [\n                        { id: 1, name: 'Garvita', phone: '1234567890', pic: '' },\n                        { id: 2, name: 'Heena', phone: '9876543210', pic: '' },\n                        { id: 3, name: 'Sayani', phone: '1112223333', pic: '' },\n                        { id: 4, name: 'Aarav', phone: '4445556666', pic: '' },\n                        { id: 5, name: 'Ananya', phone: '7778889999', pic: '' },\n                        { id: 6, name: 'Rohan', phone: '5554443333', pic: '' },\n                        { id: 7, name: 'Priya', phone: '9998887777', pic: '' },\n                        { id: 8, name: 'Sahil', phone: '2223334444', pic: '' },\n                        { id: 9, name: 'Neha', phone: '6667778888', pic: '' },\n                        { id: 10, name: 'Vishal', phone: '3332221111', pic: '' },\n                        { id: 11, name: 'Nisha', phone: '8889990000', pic: '' },\n                        { id: 12, name: 'Ishaan', phone: '1231231234', pic: '' },\n                        { id: 13, name: 'Tanya', phone: '3213214321', pic: '' },\n                        { id: 14, name: 'Aditi', phone: '4443332222', pic: '' },\n                        { id: 15, name: 'Karan', phone: '7776665555', pic: '' },\n                        { id: 16, name: 'Sonia', phone: '2221110000', pic: '' },\n                        { id: 17, name: 'Ravi', phone: '5556667777', pic: '' },\n                        { id: 18, name: 'Meera', phone: '8880009999', pic: '' },\n                        { id: 19, name: 'Arjun', phone: '1112221111', pic: '' },\n                        { id: 20, name: 'Simran', phone: '4445553333', pic: '' },\n                        { id: 21, name: 'Ritika', phone: '3334445555', pic: '' },\n                        { id: 22, name: 'Shivansh', phone: '6665554444', pic: '' },\n                        { id: 23, name: 'Aman', phone: '9998887776', pic: '' },\n                        { id: 24, name: 'Divya', phone: '1233211234', pic: '' },\n                        { id: 25, name: 'Sakshi', phone: '4321432143', pic: '' },\n                        { id: 26, name: 'Harsh', phone: '5553332222', pic: '' },\n                        { id: 27, name: 'Komal', phone: '1110001110', pic: '' },\n                        { id: 28, name: 'Vivek', phone: '7775553333', pic: '' },\n                        { id: 29, name: 'Swati', phone: '4442223333', pic: '' },\n                        { id: 30, name: 'Nikhil', phone: '9991112222', pic: '' },\n                    ];\n\n\n                    contactData.forEach((contact) => addToDB('contacts', contact));\n                    dispatchContacts({ type: 'SET_CONTACTS', payload: contactData });\n                }\n            } catch (error) {\n                console.error('Error fetching contacts:', error);\n            }\n        };\n\n        fetchContacts();\n    }, [dispatchContacts, getFromDB, addToDB]);\n\n    // Add a new contact\n    const handleAddContact = async () => {\n        if (newContactName.trim()) {\n            const newContact = {\n                id: Date.now(),\n                name: newContactName,\n                pic: newContactPic || '',\n            };\n            await addToDB('contacts', newContact);\n            dispatchContacts({ type: 'ADD_CONTACT', payload: newContact });\n            setNewContactName('');\n            setNewContactPic('');\n            setNewContactPhone('');\n            setShowForm(false);\n        }\n    };\n\n    // Delete a contact\n    const handleDeleteContact = async (id) => {\n        await deleteFromDB('contacts', id);\n        dispatchContacts({ type: 'DELETE_CONTACT', payload: id });\n    };\n\n    // Archive contact\n    const handleArchiveContact = (contact) => {\n        setArchivedContacts((prev) => [...prev, contact]);\n        handleDeleteContact(contact.id);\n    };\n\n    // Show contact options\n    const handleProfileClick = (contact) => {\n        setSelectedContact(contact.id);\n        setShowOptions(true);\n    };\n\n    // Edit contact\n    const handleEditContact = (id) => {\n        const contactToEdit = contacts.find((contact) => contact.id === id);\n        if (contactToEdit) {\n            setNewContactName(contactToEdit.name);\n            setNewContactPhone(contactToEdit.phone);\n            setNewContactPic(contactToEdit.pic);\n            setShowForm(true);\n        }\n        setShowOptions(false);\n    };\n\n    const handlePin = (contact) => {\n        if (pinnedContacts.includes(contact.id)) {\n            // Unpin the contact\n            setPinnedContacts(pinnedContacts.filter((id) => id !== contact.id));\n        } else {\n            // Pin the contact\n            setPinnedContacts([...pinnedContacts, contact.id]);\n        }\n    };\n\n    const sortedContacts = [\n        ...contacts.filter((contact) => pinnedContacts.includes(contact.id)),\n        ...contacts.filter((contact) => !pinnedContacts.includes(contact.id))\n    ];\n\n    // Update the contact's name\n    const handleUpdateContact = async () => {\n        if (newContactName.trim() && selectedContact) {\n            const updatedContact = {\n                id: selectedContact,\n                name: newContactName,\n                phone: newContactPhone,\n                pic: newContactPic || '',\n            };\n            await updateInDB('contacts', updatedContact);\n            dispatchContacts({ type: 'UPDATE_CONTACT', payload: updatedContact });\n            setNewContactName('');\n            setNewContactPhone('');\n            setNewContactPic('');\n            setShowForm(false);\n        }\n    };\n\n    // Always create a new contact when clicking the âž• button\n    const handleAddContactClick = () => {\n        setSelectedContact(null);\n        setNewContactName('');\n        setNewContactPic('');\n        setShowForm(true);\n    };\n\n    // Filter contacts based on search query\n    const filteredContactsList = contacts.filter((contact) =>\n        contact.name.toLowerCase().includes(searchQuery.toLowerCase())\n    );\n\n    return (\n        <div className={`contact-list ${theme}`}>\n            {/* Archived Contacts Section */}\n            {showArchived && (\n                <div className=\"archived-contacts\">\n                    <h3>Archived Contacts</h3>\n                    <div id=\"archivedItems\">\n                        {archivedContacts.map((contact) => (\n                            <div key={contact.id} className=\"contact-item\">\n                                <div className=\"contact-pic-container\">\n                                    {contact.pic ? (\n                                        <img src={contact.pic} alt={contact.name} className=\"contact-pic\" />\n                                    ) : (\n                                        <div className=\"contact-initial\">\n                                            {contact.name[0].toUpperCase()}\n                                        </div>\n                                    )}\n                                </div>\n                                <div className=\"contact-info\">\n                                    <span className=\"contact-name\">{contact.name}</span>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            )}\n\n            {/* Contact List Header */}\n            <div className=\"contact-list-header\">\n                <h2>Chats</h2>\n                <span className=\"add-contact-icon\" onClick={handleAddContactClick}>\n                    âž•\n                </span>\n                <span className=\"theme-toggle\" onClick={() => setTheme(theme === 'light' ? 'dark' : 'light')}>\n                    ðŸŒ—\n                </span>\n            </div>\n            <div>\n                <input\n                    type=\"text\"\n                    placeholder=\"Search contacts\"\n                    value={searchQuery}\n                    onChange={(e) => setSearchQuery(e.target.value)}\n                    className=\"search-bar\"\n                />\n            </div>\n\n            {/* Add/Edit Contact Form */}\n            {showForm && (\n                <div className=\"add-contact-form\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Enter contact name\"\n                        value={newContactName}\n                        onChange={(e) => setNewContactName(e.target.value)}\n                    />\n                    <input\n                        type=\"text\"\n                        placeholder=\"Enter phone number\"\n                        value={newContactPhone}\n                        onChange={(e) => setNewContactPhone(e.target.value)}\n                    />\n                    <input\n                        type=\"text\"\n                        placeholder=\"Enter profile picture URL (optional)\"\n                        value={newContactPic}\n                        onChange={(e) => setNewContactPic(e.target.value)}\n                    />\n                    {selectedContact ? (\n                        <button onClick={handleUpdateContact}>Update Contact</button>\n                    ) : (\n                        <button onClick={handleAddContact}>Add Contact</button>\n                    )}\n                </div>\n            )}\n\n            {/* Contact List */}\n            <div className=\"contact-list-container\">\n                {sortedContacts.map((contact) => (\n                    <div\n                        key={contact.id}\n                        className={`contact-item ${selectedContact === contact.id ? 'selected' : ''}`}\n                        onClick={() => setSelectedContact(contact.id)}\n                    >\n                        <div className=\"contact-pic-container\" onClick={() => handleProfileClick(contact)}>\n                            {contact.pic ? (\n                                <img src={contact.pic} alt={contact.name} className=\"contact-pic\" />\n                            ) : (\n                                <div className=\"contact-initial\">{contact.name[0].toUpperCase()}</div>\n                            )}\n                        </div>\n                        <div className=\"contact-info\">\n                            <span className=\"contact-name\">{contact.name}</span>\n                            <span className=\"contact-phone\">{contact.phone}</span>\n                            <button\n                                className={`pin-button ${pinnedContacts.includes(contact.id) ? 'pinned' : ''}`}\n                                onClick={(e) => {\n                                    e.stopPropagation(); // Prevent triggering onClick of the contact\n                                    handlePin(contact);\n                                }}\n                            >\n                                <span role=\"img\" aria-label=\"pin\" className=\"pin-icon\">\n                                    {pinnedContacts.includes(contact.id) ? '        ðŸ’–' : '        ðŸ“Œ'}\n                                </span>\n                            </button>\n                        </div>\n                    </div>\n                ))}\n            </div>\n            {/* Contact Options Menu */}\n            {showOptions && selectedContact && (\n                <div className=\"contact-options\">\n                    <button onClick={() => handleEditContact(selectedContact)}>Edit Contact</button>\n                    <button onClick={() => handleDeleteContact(selectedContact)}>Delete</button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default ContactList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}