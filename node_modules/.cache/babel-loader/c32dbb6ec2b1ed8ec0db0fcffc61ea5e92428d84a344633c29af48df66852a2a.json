{"ast":null,"code":"// useIndexedDB.js\nimport{openDB}from'idb';const useIndexedDB=()=>{// Initialize the database\nconst initDB=async()=>{return openDB('WhatsAppClone',1,{upgrade(db){if(!db.objectStoreNames.contains('contacts')){db.createObjectStore('contacts',{keyPath:'id'});}if(!db.objectStoreNames.contains('messages')){db.createObjectStore('messages',{keyPath:'id'});}}});};// Fetch all data from a store\nconst getFromDB=async storeName=>{const db=await initDB();return db.getAll(storeName);};// Add or update data in a store\nconst addToDB=async(storeName,data)=>{const db=await initDB();return db.put(storeName,data);// `put` can add or update records\n};// Update data in a store\nconst updateInDB=async(storeName,updatedData)=>{const db=await initDB();return db.put(storeName,updatedData);// `put` is used to update the record\n};// Delete data from a store\nconst deleteFromDB=async(storeName,id)=>{const db=await initDB();return db.delete(storeName,id);};return{getFromDB,addToDB,deleteFromDB,updateInDB};};export default useIndexedDB;","map":{"version":3,"names":["openDB","useIndexedDB","initDB","upgrade","db","objectStoreNames","contains","createObjectStore","keyPath","getFromDB","storeName","getAll","addToDB","data","put","updateInDB","updatedData","deleteFromDB","id","delete"],"sources":["C:/Users/itsme/Downloads/ChatSphere--main/ChatSphere--main/src/hooks/useIndexedDB.js"],"sourcesContent":["// useIndexedDB.js\n\nimport { openDB } from 'idb';\n\nconst useIndexedDB = () => {\n    // Initialize the database\n    const initDB = async () => {\n        return openDB('WhatsAppClone', 1, {\n            upgrade(db) {\n                if (!db.objectStoreNames.contains('contacts')) {\n                    db.createObjectStore('contacts', { keyPath: 'id' });\n                }\n                if (!db.objectStoreNames.contains('messages')) {\n                    db.createObjectStore('messages', { keyPath: 'id' });\n                }\n            },\n        });\n    };\n\n    // Fetch all data from a store\n    const getFromDB = async (storeName) => {\n        const db = await initDB();\n        return db.getAll(storeName);\n    };\n\n    // Add or update data in a store\n    const addToDB = async (storeName, data) => {\n        const db = await initDB();\n        return db.put(storeName, data); // `put` can add or update records\n    };\n\n    // Update data in a store\n    const updateInDB = async (storeName, updatedData) => {\n        const db = await initDB();\n        return db.put(storeName, updatedData); // `put` is used to update the record\n    };\n\n    // Delete data from a store\n    const deleteFromDB = async (storeName, id) => {\n        const db = await initDB();\n        return db.delete(storeName, id);\n    };\n\n    return { getFromDB, addToDB, deleteFromDB, updateInDB };\n};\n\nexport default useIndexedDB;\n"],"mappings":"AAAA;AAEA,OAASA,MAAM,KAAQ,KAAK,CAE5B,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CACvB;AACA,KAAM,CAAAC,MAAM,CAAG,KAAAA,CAAA,GAAY,CACvB,MAAO,CAAAF,MAAM,CAAC,eAAe,CAAE,CAAC,CAAE,CAC9BG,OAAOA,CAACC,EAAE,CAAE,CACR,GAAI,CAACA,EAAE,CAACC,gBAAgB,CAACC,QAAQ,CAAC,UAAU,CAAC,CAAE,CAC3CF,EAAE,CAACG,iBAAiB,CAAC,UAAU,CAAE,CAAEC,OAAO,CAAE,IAAK,CAAC,CAAC,CACvD,CACA,GAAI,CAACJ,EAAE,CAACC,gBAAgB,CAACC,QAAQ,CAAC,UAAU,CAAC,CAAE,CAC3CF,EAAE,CAACG,iBAAiB,CAAC,UAAU,CAAE,CAAEC,OAAO,CAAE,IAAK,CAAC,CAAC,CACvD,CACJ,CACJ,CAAC,CAAC,CACN,CAAC,CAED;AACA,KAAM,CAAAC,SAAS,CAAG,KAAO,CAAAC,SAAS,EAAK,CACnC,KAAM,CAAAN,EAAE,CAAG,KAAM,CAAAF,MAAM,CAAC,CAAC,CACzB,MAAO,CAAAE,EAAE,CAACO,MAAM,CAACD,SAAS,CAAC,CAC/B,CAAC,CAED;AACA,KAAM,CAAAE,OAAO,CAAG,KAAAA,CAAOF,SAAS,CAAEG,IAAI,GAAK,CACvC,KAAM,CAAAT,EAAE,CAAG,KAAM,CAAAF,MAAM,CAAC,CAAC,CACzB,MAAO,CAAAE,EAAE,CAACU,GAAG,CAACJ,SAAS,CAAEG,IAAI,CAAC,CAAE;AACpC,CAAC,CAED;AACA,KAAM,CAAAE,UAAU,CAAG,KAAAA,CAAOL,SAAS,CAAEM,WAAW,GAAK,CACjD,KAAM,CAAAZ,EAAE,CAAG,KAAM,CAAAF,MAAM,CAAC,CAAC,CACzB,MAAO,CAAAE,EAAE,CAACU,GAAG,CAACJ,SAAS,CAAEM,WAAW,CAAC,CAAE;AAC3C,CAAC,CAED;AACA,KAAM,CAAAC,YAAY,CAAG,KAAAA,CAAOP,SAAS,CAAEQ,EAAE,GAAK,CAC1C,KAAM,CAAAd,EAAE,CAAG,KAAM,CAAAF,MAAM,CAAC,CAAC,CACzB,MAAO,CAAAE,EAAE,CAACe,MAAM,CAACT,SAAS,CAAEQ,EAAE,CAAC,CACnC,CAAC,CAED,MAAO,CAAET,SAAS,CAAEG,OAAO,CAAEK,YAAY,CAAEF,UAAW,CAAC,CAC3D,CAAC,CAED,cAAe,CAAAd,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}